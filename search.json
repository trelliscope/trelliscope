[{"path":"https://trelliscope.github.io/trelliscope/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 trelliscopejs authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://trelliscope.github.io/trelliscope/articles/embed.html","id":"sharing-trelliscope-displays","dir":"Articles","previous_headings":"","what":"Sharing Trelliscope displays","title":"Sharing and Embedding Trelliscope","text":"Trelliscope displays best used way explore data colleagues, particularly domain experts can provide insight seen. , important able share Trelliscope displays others. ways . Trelliscope displays self-contained serverless web applications can easily shared others. designed able used completely offline (web dependencies libraries, fonts, etc.), can share others without worry hosting server complex dependencies. requirement person sharing modern web browser.","code":""},{"path":"https://trelliscope.github.io/trelliscope/articles/embed.html","id":"sharing-the-app-directory","dir":"Articles","previous_headings":"Sharing Trelliscope displays","what":"Sharing the app directory","title":"Sharing and Embedding Trelliscope","text":"One easiest ways share Trelliscope display simply send copy output directory colleague. email, shared file system, cloud-based file sharing. output directory contain everything needed run display. thing recipient needs open index.html file web browser.","code":""},{"path":"https://trelliscope.github.io/trelliscope/articles/embed.html","id":"github-pages","dir":"Articles","previous_headings":"Sharing Trelliscope displays","what":"GitHub Pages","title":"Sharing and Embedding Trelliscope","text":"Services like GitHub Pages, Netlify, Amazon S3, others make easy host static web content, often free. Trelliscope displays static web content, can hosted services. can read services visiting websites. Typically can set things new commits app directory automatically deployed web.","code":""},{"path":"https://trelliscope.github.io/trelliscope/articles/embed.html","id":"r-markdown-and-shiny","dir":"Articles","previous_headings":"Sharing Trelliscope displays","what":"R Markdown and Shiny","title":"Sharing and Embedding Trelliscope","text":"discuss embed Trelliscope displays R Markdown documents later sections document.","code":""},{"path":"https://trelliscope.github.io/trelliscope/articles/embed.html","id":"password-protection","dir":"Articles","previous_headings":"Sharing Trelliscope displays","what":"Password Protection","title":"Sharing and Embedding Trelliscope","text":"content sensitive, can either use services provided web hosting solution can pass Trelliscope data frame add_charm() function add simple password protection layer display. require user enter password can view display. function makes use fidelius R package currently encrypts index.html file, want make sure web hosting platform allow direct access files app directory.","code":""},{"path":"https://trelliscope.github.io/trelliscope/articles/embed.html","id":"embedding-trelliscope-in-r-markdown","dir":"Articles","previous_headings":"","what":"Embedding Trelliscope in R Markdown","title":"Sharing and Embedding Trelliscope","text":"worked make easy embed Trelliscope displays R Markdown documents. easy calling view_trelliscope() Trelliscope data frame. However, things keep mind. First, can embed Trelliscope outputs HTML-formatted output types aren’t self-contained. tested following output formats: rmarkdown::html_vignette rmarkdown::html_document rmarkdown::slidy_presentation revealjs::revealjs_presentation Second, output chunk needs name. used determine write output display. Third, need leave path option as_trelliscope_df() blank. Trelliscope automatically determine path use, relative path inside R Markdown output directory. Additionally, might consider setting chunk options make output look better. example, good idea set .width=\"100%\" hard-code height (.height=\"___px\") control size display. also added support scale chunk option can used scale output UI doesn’t appear large rendered confined spaces. example chunk embed Trelliscope display R Markdown document considerations mind. Another option embedding Trelliscope displays R Markdown documents pre-render host somewhere internet stick iframe tag R Markdown document.","code":"```{r mars_trelliscope, out.width=\"100%\", out.height=\"700px\", scale=0.5} library(trellicope) d <- as_trelliscope_df(mars_rover, name = \"mars rover\") view_trelliscope(d) ```"},{"path":"https://trelliscope.github.io/trelliscope/articles/embed.html","id":"embedding-trelliscope-in-quarto","dir":"Articles","previous_headings":"","what":"Embedding Trelliscope in Quarto","title":"Sharing and Embedding Trelliscope","text":"Similar R Markdown, embedding Quarto, can set necessary output options code block help display render way like. example:","code":"```{r} #| label: mars_trelliscope #| out-width: \"100%\" #| out-height: \"500px\" #| scale: 0.5 #| output: asis library(trellicope) d <- as_trelliscope_df(mars_rover, name = \"mars rover\") view_trelliscope(d) ```"},{"path":"https://trelliscope.github.io/trelliscope/articles/embed.html","id":"embedding-trelliscope-in-shiny","dir":"Articles","previous_headings":"","what":"Embedding Trelliscope in Shiny","title":"Sharing and Embedding Trelliscope","text":"Trelliscope great alternative Shiny wide range interactive visualization applications. situation considering building Shiny app provides user many controls produce visual output, consider using Trelliscope instead producing data frame visualizations corresponding every combination user input values. Trelliscope displays easier build, maintain, share shiny apps, provide benefit able view many outputs simultaneously, well exploring input parameter space interactively. can case, however, might want build Shiny app allows user provide inputs building Trelliscope display, like user able view Trelliscope display. latter (dynamic inputs required creating display), advise simply build display -front embed iframe somewhere Shiny app. building displaying dynamically-generated Trelliscope displays, provide example . example, create simple app allows user choose dataset (either mars_rover none), provide description Trelliscope display, view resulting display. experience Shiny, straightforward. One main function call add_trelliscope_resource_path(), allows specify path app can look find Trelliscope displays. UI, can use trelliscopeOutput() specify Trelliscope display rendered. server, use renderTrelliscope() write create display. must place display path used add_trelliscope_resource_path(). object returned renderTrelliscope() Trelliscope data frame. Trelliscope take care writing display specified path rendering UI. Note create Trelliscope data frame renderTrelliscope(), use jsonp = FALSE. using Shiny locally, can likely stick default jsonp = TRUE. However, deploying Shiny app server, noticed services like shinyapps.io Posit Connect like data files written Trelliscope stored jsonp need set jsonp = FALSE.","code":"library(trelliscope) library(shiny)  tr_dir <- tempfile() dir.create(tr_dir) add_trelliscope_resource_path(\"trelliscope\", tr_dir)  ui <- fluidPage(   titlePanel(\"Trelliscope Embed in Shiny\"),   sidebarLayout(     sidebarPanel(       selectInput(         \"dataset\",         \"Choose a dataset:\",         choices = c(\"mars_rover\", \"[no data]\")),       textInput(\"description\", \"Description:\", \"[display description]\")     ),     mainPanel(       trelliscopeOutput(\"trelliscope\", style = \"height: 800px\")     )   ) )  server <- function(input, output) {   output$trelliscope <- renderTrelliscope({     if (input$dataset == \"mars_rover\") {       d <- as_trelliscope_df(mars_rover,         name = \"mars rover\",         description = input$description,         path = file.path(tr_dir, \"test\"),         jsonp = FALSE       )       d     } else {       NULL     }   }) }  shinyApp(ui = ui, server = server)"},{"path":"https://trelliscope.github.io/trelliscope/articles/panels.html","id":"using-facet_panels-with-ggplot2","dir":"Articles","previous_headings":"","what":"Using facet_panels() with ggplot2","title":"Creating Panel Columns","text":"stick gapminder example article (using gap version gapminder data comes package). Introduction article, showed visualize life expectancy vs. time country ggplot2 using facet_panels() as_panels_df(). lexp_time column list appears ggplot2 objects, one panel. actually happening bit complex. lexp_time special vector contains minimal information row needed create ggplot facet particular row, along plotting function contains instructions create panel underlying data. single plot rendered (e.g. calling gap$lexp_time[[1]]), plotting function called data particular panel. view data frame Trelliscope data frame, write panels using instructions. special case general “lazy” panel specification approach discuss next section. Note as_panels_df() arument as_plotly argument, TRUE, convert ggplot panels Plotly. Additional arguments plotly_args plotly_cfg provided customize Plotly output.","code":"gp <- (   ggplot(gap, aes(year, life_exp)) +     geom_point() +     facet_panels(vars(country, continent, iso_alpha2))   ) |>   as_panels_df(panel_col = \"lexp_time\")  gp #> # A tibble: 142 × 4 #>    country     continent iso_alpha2 lexp_time  #>    <chr>       <fct>     <chr>      <ggpanels> #>  1 Afghanistan Asia      AF         <ggplot>   #>  2 Albania     Europe    AL         <ggplot>   #>  3 Algeria     Africa    DZ         <ggplot>   #>  4 Angola      Africa    AO         <ggplot>   #>  5 Argentina   Americas  AR         <ggplot>   #>  6 Australia   Oceania   AU         <ggplot>   #>  7 Austria     Europe    AT         <ggplot>   #>  8 Bahrain     Asia      BH         <ggplot>   #>  9 Bangladesh  Asia      BD         <ggplot>   #> 10 Belgium     Europe    BE         <ggplot>   #> # ℹ 132 more rows"},{"path":"https://trelliscope.github.io/trelliscope/articles/panels.html","id":"custom-r-generated-panels-with-panel_lazy","dir":"Articles","previous_headings":"","what":"Custom R-generated panels with panel_lazy()","title":"Creating Panel Columns","text":"typical use case visualizing data Trelliscope, seen example , larger dataset aggregate way according grouping variables, want visualize larger dataset corresponding group. One way , using faceting specify subsetting “summary” visualizations. Another way summarize data first specify plotting function provides plot row summary dataset can based data full dataset. example, consider following simple summary dataset mean life expectancy mean GDP per capita country gapminder dataset. Now suppose like use dygraphs package create interactive time series plot life expectancy time country. , create plot function takes input, country, returns dygraph plot life expectancy vs. time gap dataset filtered country. Now need add new plot column gsumm use panel_lazy() takes plot function dataset applies arguments. Note used dplyr mutate(), dataset inferred need provided. create plot column outside dplyr, need provide dataset argument: Note case panels htmlwidgets. plot function can return type htmlwidget plot objects can printed image files, ggplot2 objects. can now view plot country indexing lexp_time column. important thing note plot function arguments must match variable names found dataset. case, country argument plot_fn() matches country column gsumm. can access columns dataset like. example, want use iso_alpha2 column help label plot, can : applied row gsumm, iso_alpha2 column passed plot_fn() along country column. Another thing note using dplyr filter inside plot function, please aware issues can arise data masking. example, notice example need use embrace operator {{ filter() keep code execution getting confused whether referring column name data . using dplyr, something like x <- gap[gap$country == country, ] work fine.","code":"gsumm <- gap %>%   summarise(     mean_lexp = mean(life_exp),     mean_gdp = mean(gdp_percap),     .by = c(\"continent\", \"country\", \"iso_alpha2\")   ) gsumm #> # A tibble: 142 × 5 #>    continent country     iso_alpha2 mean_lexp mean_gdp #>    <fct>     <chr>       <chr>          <dbl>    <dbl> #>  1 Asia      Afghanistan AF              37.5     803. #>  2 Europe    Albania     AL              68.4    3255. #>  3 Africa    Algeria     DZ              59.0    4426. #>  4 Africa    Angola      AO              37.9    3607. #>  5 Americas  Argentina   AR              69.1    8956. #>  6 Oceania   Australia   AU              74.7   19981. #>  7 Europe    Austria     AT              73.1   20412. #>  8 Asia      Bahrain     BH              65.6   18078. #>  9 Asia      Bangladesh  BD              49.8     818. #> 10 Europe    Belgium     BE              73.6   19901. #> # ℹ 132 more rows library(dygraphs)  plot_fn <- function(country) {   x <- filter(gap, country == {{ country }})   dygraph(select(x, year, life_exp)) %>%     dyOptions(strokeWidth = 3, drawPoints = TRUE, pointSize = 4, gridLineColor = \"#dedede\") %>%     dyHighlight(highlightCircleSize = 6) %>%     dyAxis(\"x\", label = \"Year\", valueRange = c(1952, 2007)) %>%     dyAxis(\"y\", label = \"Life Expectancy (yrs)\", valueRange = c(23.59, 82.61)) %>%     dyRangeSelector() }  plot_fn(\"Afghanistan\") gsumm <- gsumm %>%   mutate(lexp_time = panel_lazy(plot_fn))  gsumm #> # A tibble: 142 × 6 #>    continent country     iso_alpha2 mean_lexp mean_gdp lexp_time     #>    <fct>     <chr>       <chr>          <dbl>    <dbl> <lazy_panels> #>  1 Asia      Afghanistan AF              37.5     803. <htmlwidget>  #>  2 Europe    Albania     AL              68.4    3255. <htmlwidget>  #>  3 Africa    Algeria     DZ              59.0    4426. <htmlwidget>  #>  4 Africa    Angola      AO              37.9    3607. <htmlwidget>  #>  5 Americas  Argentina   AR              69.1    8956. <htmlwidget>  #>  6 Oceania   Australia   AU              74.7   19981. <htmlwidget>  #>  7 Europe    Austria     AT              73.1   20412. <htmlwidget>  #>  8 Asia      Bahrain     BH              65.6   18078. <htmlwidget>  #>  9 Asia      Bangladesh  BD              49.8     818. <htmlwidget>  #> 10 Europe    Belgium     BE              73.6   19901. <htmlwidget>  #> # ℹ 132 more rows gsumm$lexp_time <- panel_lazy(plot_fn, data = gsumm) gsumm$lexp_time[[1]] #> <panel_lazy_vec[1]> #> [1] <htmlwidget> plot_fn <- function(country, iso_alpha2) {   x <- filter(gap, country == {{ country }})   dygraph(select(x, year, life_exp),     main = paste0(country, \" (\", iso_alpha2, \")\")) %>%     dyOptions(strokeWidth = 3, drawPoints = TRUE, pointSize = 4, gridLineColor = \"#dedede\") %>%     dyHighlight(highlightCircleSize = 6) %>%     dyAxis(\"x\", label = \"Year\", valueRange = c(1952, 2007)) %>%     dyAxis(\"y\", label = \"Life Expectancy (yrs)\", valueRange = c(23.59, 82.61)) %>%     dyRangeSelector() }"},{"path":"https://trelliscope.github.io/trelliscope/articles/panels.html","id":"panels-of-images-existing-on-the-web-with-panel_url","dir":"Articles","previous_headings":"","what":"Panels of images existing on the web with panel_url()","title":"Creating Panel Columns","text":"image html assets exist web, can create panel columns pointing using panel_url(). example, suppose want add column flags country. forked repository contains image files country flag, file named using country’s 2-letter code. can use iso_alpha2 column gapminder dataset construct URL flag.","code":"flag_base_url <- \"https://raw.githubusercontent.com/hafen/countryflags/master/png/512/\"  gsumm <- mutate(gsumm,   flag_url = panel_url(paste0(flag_base_url, iso_alpha2, \".png\")) ) gsumm #> # A tibble: 142 × 7 #>    continent country     iso_alpha2 mean_lexp mean_gdp lexp_time     flag_url    #>    <fct>     <chr>       <chr>          <dbl>    <dbl> <lazy_panels> <url_panel> #>  1 Asia      Afghanistan AF              37.5     803. <htmlwidget>  <img>       #>  2 Europe    Albania     AL              68.4    3255. <htmlwidget>  <img>       #>  3 Africa    Algeria     DZ              59.0    4426. <htmlwidget>  <img>       #>  4 Africa    Angola      AO              37.9    3607. <htmlwidget>  <img>       #>  5 Americas  Argentina   AR              69.1    8956. <htmlwidget>  <img>       #>  6 Oceania   Australia   AU              74.7   19981. <htmlwidget>  <img>       #>  7 Europe    Austria     AT              73.1   20412. <htmlwidget>  <img>       #>  8 Asia      Bahrain     BH              65.6   18078. <htmlwidget>  <img>       #>  9 Asia      Bangladesh  BD              49.8     818. <htmlwidget>  <img>       #> 10 Europe    Belgium     BE              73.6   19901. <htmlwidget>  <img>       #> # ℹ 132 more rows"},{"path":"https://trelliscope.github.io/trelliscope/articles/panels.html","id":"panels-of-images-on-the-local-filesystem-with-panel_local","dir":"Articles","previous_headings":"","what":"Panels of images on the local filesystem with panel_local()","title":"Creating Panel Columns","text":"Suppose instead want use local image files. can use panel_local() create panel column points local files. download flag images temporary directory illustrate. can now create panel column points local files. Note make gsumm Trelliscope data frame view , local panel files copied directory Trelliscope display self-contained. want avoid making copy, can create appropriate directory structure put files .","code":"flag_path <- tempdir() download.file(\"https://github.com/trelliscope/trelliscope/files/12265140/flags.zip\",   destfile = file.path(flag_path, \"flags.zip\")) unzip(file.path(flag_path, \"flags.zip\"), exdir = file.path(flag_path, \"flags\")) list.files(file.path(flag_path, \"flags\")) #>   [1] \"AF.png\" \"AL.png\" \"AO.png\" \"AR.png\" \"AT.png\" \"AU.png\" \"BA.png\" \"BD.png\" #>   [9] \"BE.png\" \"BF.png\" \"BG.png\" \"BH.png\" \"BI.png\" \"BJ.png\" \"BR.png\" \"BW.png\" #>  [17] \"CA.png\" \"CF.png\" \"CH.png\" \"CL.png\" \"CM.png\" \"CN.png\" \"CO.png\" \"CR.png\" #>  [25] \"CU.png\" \"DE.png\" \"DJ.png\" \"DK.png\" \"DO.png\" \"DZ.png\" \"EC.png\" \"EG.png\" #>  [33] \"ER.png\" \"ES.png\" \"ET.png\" \"FI.png\" \"FR.png\" \"GA.png\" \"GB.png\" \"GH.png\" #>  [41] \"GM.png\" \"GN.png\" \"GQ.png\" \"GR.png\" \"GT.png\" \"GW.png\" \"HN.png\" \"HR.png\" #>  [49] \"HT.png\" \"HU.png\" \"ID.png\" \"IE.png\" \"IL.png\" \"IN.png\" \"IQ.png\" \"IS.png\" #>  [57] \"IT.png\" \"JM.png\" \"JO.png\" \"JP.png\" \"KE.png\" \"KH.png\" \"KM.png\" \"KW.png\" #>  [65] \"LB.png\" \"LK.png\" \"LR.png\" \"LS.png\" \"LY.png\" \"MA.png\" \"ME.png\" \"MG.png\" #>  [73] \"ML.png\" \"MM.png\" \"MN.png\" \"MR.png\" \"MU.png\" \"MW.png\" \"MX.png\" \"MY.png\" #>  [81] \"MZ.png\" \"NA.png\" \"NE.png\" \"NG.png\" \"NI.png\" \"NL.png\" \"NO.png\" \"NP.png\" #>  [89] \"NZ.png\" \"OM.png\" \"PA.png\" \"PE.png\" \"PH.png\" \"PK.png\" \"PL.png\" \"PR.png\" #>  [97] \"PT.png\" \"PY.png\" \"RO.png\" \"RS.png\" \"RW.png\" \"SA.png\" \"SD.png\" \"SE.png\" #> [105] \"SG.png\" \"SI.png\" \"SL.png\" \"SN.png\" \"SO.png\" \"ST.png\" \"SV.png\" \"SZ.png\" #> [113] \"TD.png\" \"TG.png\" \"TH.png\" \"TN.png\" \"TR.png\" \"TT.png\" \"UG.png\" \"UY.png\" #> [121] \"ZA.png\" \"ZM.png\" \"ZW.png\" gsumm <- mutate(gsumm,   flag = panel_local(file.path(flag_path, \"flags\", paste0(iso_alpha2, \".png\"))), ) gsumm #> # A tibble: 142 × 8 #>    continent country   iso_alpha2 mean_lexp mean_gdp lexp_time    flag_url flag  #>    <fct>     <chr>     <chr>          <dbl>    <dbl> <lazy_panel> <url_pa> <loc> #>  1 Asia      Afghanis… AF              37.5     803. <htmlwidget> <img>    <img> #>  2 Europe    Albania   AL              68.4    3255. <htmlwidget> <img>    <img> #>  3 Africa    Algeria   DZ              59.0    4426. <htmlwidget> <img>    <img> #>  4 Africa    Angola    AO              37.9    3607. <htmlwidget> <img>    <img> #>  5 Americas  Argentina AR              69.1    8956. <htmlwidget> <img>    <img> #>  6 Oceania   Australia AU              74.7   19981. <htmlwidget> <img>    <img> #>  7 Europe    Austria   AT              73.1   20412. <htmlwidget> <img>    <img> #>  8 Asia      Bahrain   BH              65.6   18078. <htmlwidget> <img>    <img> #>  9 Asia      Banglade… BD              49.8     818. <htmlwidget> <img>    <img> #> 10 Europe    Belgium   BE              73.6   19901. <htmlwidget> <img>    <img> #> # ℹ 132 more rows"},{"path":"https://trelliscope.github.io/trelliscope/articles/panels.html","id":"setting-panel-options","dir":"Articles","previous_headings":"","what":"Setting panel options","title":"Creating Panel Columns","text":"","code":"d <- as_trelliscope_df(gsumm, name = \"gapminder\")  |>   set_default_labels(c(\"country\", \"continent\")) |>   set_default_layout(ncol = 3) |>   set_default_sort(c(\"continent\", \"mean_lexp\"), dir = c(\"asc\", \"desc\")) #> ℹ Using the variables \"continent\" and \"country\" to uniquely identify each row #>   of the data. #> Warning: ! Files for local panel \"flag\" are not in the correct location. They are #>   currently here: '/tmp/RtmpH08t5v/flags' and will be copied here: #>   '/home/runner/work/trelliscope/trelliscope/docs/articles/panels_files/figure-html/gap/displays/gapminder/panels/flag' #>   when the display is written.  # set panel options (if not specified, defaults are used) d <- d |>   set_panel_options(     lexp_time = panel_options(width = 600, height = 400)   ) |>   set_primary_panel(\"lexp_time\")  view_trelliscope(d) #> ℹ Inferred that variable 'mean_gdp' should be shown on log #> scale."},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"data-frames-of-visualizations","dir":"Articles","previous_headings":"","what":"Data frames of visualizations","title":"Introduction to Trelliscope","text":"basic principle behind design R package specify collection visualizations data frame, one columns representing plots (either plot object ggplot reference image png, svg, even html file), columns representing metadata visualization. refer plot (row) given visualization (column) panel, hence often refer visualization column collection panels. package provides utilities help build data frames explore interactive viewer.","code":""},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"pre-generated-images","dir":"Articles","previous_headings":"Data frames of visualizations","what":"Pre-generated images","title":"Introduction to Trelliscope","text":"simplest way illustrate meant data frame visualizations start example images already generated. example dataset comes package contains images captured Mars rover Curiosity. data frame column references images web, img_src. columns contain metadata images. can create Trelliscope data frame following: simply data frame additional information render Trelliscope viewer app. minimum provide name resulting display, can also specify additional information path want output written (temporary directory specified), description tags. can also specify key_cols columns combined, uniquely identify row data. inferred provided sometimes might like , often many possibilities. see information trelliscope-specific settings, can use show_info(): Now view Trelliscope viewer app: can use viewer interactively explore images filtering, sorting, paging panels. Feel free try example ! can click icon upper-right corner full-screen view viewer. behavior Trelliscope viewer can customized many ways, either augmenting data frame new data, specifying additional visualizations, default sorting filtering, many options. cover throughout document.","code":"library(trelliscope)  mars_rover #> # A tibble: 1,245 × 11 #>       id camera   sol earth_date class width height filesize hex     hue img_src #>    <int> <chr>  <int> <date>     <chr> <int>  <int>    <int> <chr> <dbl> <chr>   #>  1  3560 Mars …   565 2014-03-09 hori…   192    144     5656 #7C6…  31.4 http:/… #>  2 74689 Mars …   565 2014-03-09 hori…  1632   1200   592880 #7B6…  32.9 http:/… #>  3  3558 Mars …   568 2014-03-12 wheel   192    144     9123 #3C3…  33.9 http:/… #>  4 74630 Mars …   568 2014-03-12 wheel  1632   1200   567528 #4F4…  31.1 http:/… #>  5 74631 Mars …   568 2014-03-12 wheel  1632   1200   556007 #4B4…  32.5 http:/… #>  6 74632 Mars …   568 2014-03-12 wheel  1632   1200   721995 #564…  33.1 http:/… #>  7 74633 Mars …   568 2014-03-12 wheel  1632   1200   511984 #433…  32.3 http:/… #>  8 74634 Mars …   568 2014-03-12 wheel  1632   1200   523267 #3C3…  32.3 http:/… #>  9 74635 Mars …   568 2014-03-12 wheel  1632   1200   580228 #3D3…  32.5 http:/… #> 10 74637 Mars …   568 2014-03-12 wheel   192    144    10522 #4E4…  32.3 http:/… #> # ℹ 1,235 more rows d <- as_trelliscope_df(mars_rover, name = \"mars rover\") #> ℹ Using the variable \"id\" to uniquely identify each row #> of the data.  d #> ℹ Trelliscope data frame: \"mars rover\" located at #>   \"/home/runner/work/trelliscope/trelliscope/docs/articles/trelliscope_files/figure-html//mars0\" #>   with 1 panel: #> • \"img_src\": <panel_url>   [no panel options specified] #> # A tibble: 1,245 × 11 #>       id camera   sol earth_date class width height filesize hex     hue img_src #>    <int> <chr>  <int> <date>     <chr> <int>  <int>    <int> <chr> <dbl> <url_p> #>  1  3560 Mars …   565 2014-03-09 hori…   192    144     5656 #7C6…  31.4 <img>   #>  2 74689 Mars …   565 2014-03-09 hori…  1632   1200   592880 #7B6…  32.9 <img>   #>  3  3558 Mars …   568 2014-03-12 wheel   192    144     9123 #3C3…  33.9 <img>   #>  4 74630 Mars …   568 2014-03-12 wheel  1632   1200   567528 #4F4…  31.1 <img>   #>  5 74631 Mars …   568 2014-03-12 wheel  1632   1200   556007 #4B4…  32.5 <img>   #>  6 74632 Mars …   568 2014-03-12 wheel  1632   1200   721995 #564…  33.1 <img>   #>  7 74633 Mars …   568 2014-03-12 wheel  1632   1200   511984 #433…  32.3 <img>   #>  8 74634 Mars …   568 2014-03-12 wheel  1632   1200   523267 #3C3…  32.3 <img>   #>  9 74635 Mars …   568 2014-03-12 wheel  1632   1200   580228 #3D3…  32.5 <img>   #> 10 74637 Mars …   568 2014-03-12 wheel   192    144    10522 #4E4…  32.3 <img>   #> # ℹ 1,235 more rows show_info(d) #> A trelliscope display #> • Name: \"mars rover\" #> • Description: \"mars rover\" #> • Tags: none #> • Key columns: \"id\" #> • Path: #>   \"/home/runner/work/trelliscope/trelliscope/docs/articles/trelliscope_files/figure-html//mars0\" #> • Number of panels: 1245 view_trelliscope(d) #> ℹ Inferred that variable 'filesize' should be shown on log scale. #> ℹ No default \"layout\" state supplied. Using ncol=3. #> ℹ No default \"labels\" state supplied. Using id."},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"r-generated-visualizations","dir":"Articles","previous_headings":"Data frames of visualizations","what":"R-generated visualizations","title":"Introduction to Trelliscope","text":"likely common use case visualizing data analysis images yet exist generating subsets data analyzing. Trelliscope utilities make convenient visualization packages like ggplot2. simple example, let’s consider gap dataset modified version data originally comes gapminder package. modified version contains extra columns ISO country code country centroid latitude longitude. data provides statistics life expectancy annually 123 countries. Suppose want visualize life expectancy vs. year country. ggplot2, something like :  many panels view one page, making good candidate Trelliscope. Trelliscope provides function facet_panels() first step turning ggplot object Trelliscope data frame. can swap facet_wrap() function. can see, facet_panels() simply modifies ggplot object. print resulting object p, Trelliscope display written displayed. take turn data frame visualizations one row country/continent, can apply function as_panels_df(). , just Mars rover example, data frame visualizations. However, case, visualizations ggplot objects instead image references. Note as_panels_df() options as_plotly = TRUE convert ggplot objects plotly objects. can view plot one row calling panel column index number row want look . example, wanted see generated plot second row, Albania, run following code.  Note nested data frame visualizations can useful object work outside using Trelliscope. Just Mars rover example, can view data frame visualizations cast Trelliscope data frame as_trelliscope_df() view view_trelliscope(). Note several benefits using facet_panels() as_panels_df(). First, fits naturally ggplot2 paradigm, can build Trelliscope visualization exactly building ggplot2 visualization. Second, can make use scales argument facet_panels() (behaves similarly argument facet_wrap()) ensure x y axis ranges plots behave way want. default plots \"fixed\" axis ranges. important consideration visualizing small multiples making visual comparisons often want comparing things scale. remainder tutorial cover customizations can apply Trelliscope data frames provide powerful interactions viewing app.","code":"gap #> # A tibble: 1,704 × 9 #>    country     continent  year life_exp    pop gdp_percap iso_alpha2   lat   lon #>    <chr>       <fct>     <int>    <dbl>  <int>      <dbl> <chr>      <dbl> <dbl> #>  1 Afghanistan Asia       1952     28.8 8.43e6       779. AF            33    65 #>  2 Afghanistan Asia       1957     30.3 9.24e6       821. AF            33    65 #>  3 Afghanistan Asia       1962     32.0 1.03e7       853. AF            33    65 #>  4 Afghanistan Asia       1967     34.0 1.15e7       836. AF            33    65 #>  5 Afghanistan Asia       1972     36.1 1.31e7       740. AF            33    65 #>  6 Afghanistan Asia       1977     38.4 1.49e7       786. AF            33    65 #>  7 Afghanistan Asia       1982     39.9 1.29e7       978. AF            33    65 #>  8 Afghanistan Asia       1987     40.8 1.39e7       852. AF            33    65 #>  9 Afghanistan Asia       1992     41.7 1.63e7       649. AF            33    65 #> 10 Afghanistan Asia       1997     41.8 2.22e7       635. AF            33    65 #> # ℹ 1,694 more rows library(ggplot2)  ggplot(gap, aes(year, life_exp)) +   geom_point() +   facet_wrap(vars(country, continent)) p <- ggplot(gap, aes(year, life_exp)) +   geom_point() +   facet_panels(vars(country, continent))  class(p) #> [1] \"facet_panels\" \"gg\"           \"ggplot\" p_df <- as_panels_df(p)  p_df #> # A tibble: 142 × 3 #>    country     continent panel      #>    <chr>       <fct>     <ggpanels> #>  1 Afghanistan Asia      <ggplot>   #>  2 Albania     Europe    <ggplot>   #>  3 Algeria     Africa    <ggplot>   #>  4 Angola      Africa    <ggplot>   #>  5 Argentina   Americas  <ggplot>   #>  6 Australia   Oceania   <ggplot>   #>  7 Austria     Europe    <ggplot>   #>  8 Bahrain     Asia      <ggplot>   #>  9 Bangladesh  Asia      <ggplot>   #> 10 Belgium     Europe    <ggplot>   #> # ℹ 132 more rows p_df$panel[[2]] #> <ggpanel_vec[1]> #> [1] <ggplot> tdf <- as_trelliscope_df(p_df,   name = \"gapminder life expectancy\")  view_trelliscope(tdf) #> ℹ No default \"layout\" state supplied. Using ncol=3. #> ℹ No default \"labels\" state supplied. Using country, continent. #> Writing panel ■■■■                               8% | ETA: 12s #>  #> Writing panel ■■■■■                             12% | ETA: 11s #>  #> Writing panel ■■■■■■■■■■■                       34% | ETA:  9s #>  #> Writing panel ■■■■■■■■■■■■■■■■■                 54% | ETA:  6s #>  #> Writing panel ■■■■■■■■■■■■■■■■■■■■■■■■          78% | ETA:  3s #>  #> Writing panel ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■  100% | ETA:  0s"},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"customizing-your-trelliscope-app","dir":"Articles","previous_headings":"","what":"Customizing your Trelliscope app","title":"Introduction to Trelliscope","text":"far seen ways get Trelliscope data frame can use create Trelliscope interactive visualization app. ’ve seen, can simply pass Trelliscope data frame view_trelliscope() get immediate output. However, many operations can perform Trelliscope data frame customize app behaves. Let’s revisit gapminder example. re-build data frame ggplot panels one code block. also added iso_alpha2 (country code) redundant facetting variable available data frame later use.","code":"library(dplyr, warn.conflicts = FALSE)  tdf <- (   ggplot(gap, aes(year, life_exp)) +     geom_point() +     facet_panels(vars(country, continent, iso_alpha2))   ) |>   as_panels_df(panel_col = \"lexp_time\") |>   as_trelliscope_df(name = \"gapminder life expectancy\")  tdf #> ℹ Trelliscope data frame: \"gapminder life expectancy\" located at #>   \"/home/runner/work/trelliscope/trelliscope/docs/articles/trelliscope_files/figure-html//gap1\" #>   with 1 panel: #> • \"lexp_time\": <ggpanel>     [no panel options specified] #> # A tibble: 142 × 4 #>    country     continent iso_alpha2 lexp_time  #>    <chr>       <fct>     <chr>      <ggpanels> #>  1 Afghanistan Asia      AF         <ggplot>   #>  2 Albania     Europe    AL         <ggplot>   #>  3 Algeria     Africa    DZ         <ggplot>   #>  4 Angola      Africa    AO         <ggplot>   #>  5 Argentina   Americas  AR         <ggplot>   #>  6 Australia   Oceania   AU         <ggplot>   #>  7 Austria     Europe    AT         <ggplot>   #>  8 Bahrain     Asia      BH         <ggplot>   #>  9 Bangladesh  Asia      BD         <ggplot>   #> 10 Belgium     Europe    BE         <ggplot>   #> # ℹ 132 more rows"},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"adding-panels","dir":"Articles","previous_headings":"Customizing your Trelliscope app","what":"Adding panels","title":"Introduction to Trelliscope","text":"data frame already panel column, can add like. following functions available add panels Trelliscope data frame. panel_url(): Add panel column URLs images panel_local(): Add panel column local image files panel_lazy(): Add panel column specifying plot function used generate panels show example using panel_url() add country flag images data frame. another article provide examples using functions. Note variation panel_lazy() used underneath hood use facet_panels(). database country flags available flag images can referenced 2-letter country code. can view flag country looking single entry column, e.g. tdf$flag_url[[1]]. open image web browser.","code":"flag_base_url <- \"https://raw.githubusercontent.com/hafen/countryflags/master/png/512/\"  tdf <- mutate(tdf,   flag_url = panel_url(paste0(flag_base_url, iso_alpha2, \".png\")) )  tdf #> ℹ Trelliscope data frame: \"gapminder life expectancy\" located at #>   \"/home/runner/work/trelliscope/trelliscope/docs/articles/trelliscope_files/figure-html//gap1\" #>   with 2 panels: #> • \"lexp_time\": <ggpanel>     [no panel options specified] #>  #> • \"flag_url\" : <panel_url>   [no panel options specified] #> # A tibble: 142 × 5 #>    country     continent iso_alpha2 lexp_time  flag_url             #>    <chr>       <fct>     <chr>      <ggpanels> <url_panels>         #>  1 Afghanistan Asia      AF         <ggplot>   <img> .../512/AF.png #>  2 Albania     Europe    AL         <ggplot>   <img> .../512/AL.png #>  3 Algeria     Africa    DZ         <ggplot>   <img> .../512/DZ.png #>  4 Angola      Africa    AO         <ggplot>   <img> .../512/AO.png #>  5 Argentina   Americas  AR         <ggplot>   <img> .../512/AR.png #>  6 Australia   Oceania   AU         <ggplot>   <img> .../512/AU.png #>  7 Austria     Europe    AT         <ggplot>   <img> .../512/AT.png #>  8 Bahrain     Asia      BH         <ggplot>   <img> .../512/BH.png #>  9 Bangladesh  Asia      BD         <ggplot>   <img> .../512/BD.png #> 10 Belgium     Europe    BE         <ggplot>   <img> .../512/BE.png #> # ℹ 132 more rows"},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"adding-variables","dir":"Articles","previous_headings":"Customizing your Trelliscope app","what":"Adding variables","title":"Introduction to Trelliscope","text":"One useful things can customize Trelliscope app add additional variables data frame. variables can used control panels explored viewer sorting, filtering, labels. example, suppose want able explore countries based summary statistics mean life expectancy, etc. can computing summaries gapminder data joining tdf. Trelliscope makes use variable types determine data displayed viewer well can interacted . Built-R types “character”, “factor”, “numeric”, “Date”, “POSIXct”, supported. Character factor variables filter interaction allows filter data values variable (factors, natural order values according factor levels). Numeric, date POSIXct variables range filter interaction allows filter data range numbers/dates/times.","code":"gsumm <- gap |>   mutate(pct_chg = 100 * (life_exp - lag(life_exp)) / lag(life_exp)) |>   summarise(     mean_lexp = mean(life_exp),     mean_gdp = mean(gdp_percap),     max_lexp_pct_chg = max(pct_chg, na.rm = TRUE),     dt_lexp_max_pct_chg = as.Date(paste0(year[which.max(pct_chg)], \"-01-01\")),     .by = country   )  tdf <- left_join(tdf, gsumm, by = \"country\")  tdf #> ℹ Trelliscope data frame: \"gapminder life expectancy\" located at #>   \"/home/runner/work/trelliscope/trelliscope/docs/articles/trelliscope_files/figure-html//gap1\" #>   with 2 panels: #> • \"lexp_time\": <ggpanel>     [no panel options specified] #>  #> • \"flag_url\" : <panel_url>   [no panel options specified] #> # A tibble: 142 × 9 #>    country     continent iso_alpha2 lexp_time  flag_url     mean_lexp mean_gdp #>    <chr>       <fct>     <chr>      <ggpanels> <url_panels>     <dbl>    <dbl> #>  1 Afghanistan Asia      AF         <ggplot>   <img>             37.5     803. #>  2 Albania     Europe    AL         <ggplot>   <img>             68.4    3255. #>  3 Algeria     Africa    DZ         <ggplot>   <img>             59.0    4426. #>  4 Angola      Africa    AO         <ggplot>   <img>             37.9    3607. #>  5 Argentina   Americas  AR         <ggplot>   <img>             69.1    8956. #>  6 Australia   Oceania   AU         <ggplot>   <img>             74.7   19981. #>  7 Austria     Europe    AT         <ggplot>   <img>             73.1   20412. #>  8 Bahrain     Asia      BH         <ggplot>   <img>             65.6   18078. #>  9 Bangladesh  Asia      BD         <ggplot>   <img>             49.8     818. #> 10 Belgium     Europe    BE         <ggplot>   <img>             73.6   19901. #> # ℹ 132 more rows #> # ℹ 2 more variables: max_lexp_pct_chg <dbl>, dt_lexp_max_pct_chg <date>"},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"special-variable-types","dir":"Articles","previous_headings":"Customizing your Trelliscope app","what":"Special variable types","title":"Introduction to Trelliscope","text":"Trelliscope provides additional variable types can used provide special functionality viewer. Currently, following provided: number(): Specifies numeric type allows specification number digits display whether show variable log scale. currency(): Specifies numeric type represents currency can currency symbol prepended . href(): Specifies character type represents URL link . types make use vctrs package. can create variables types simply wrapping vector functions additional paramters. example, add example variables gapminder data frame: special variable types come future supporting filter interactions added viewer. types anticipate include geographic coordinates, network graph links, .","code":"tdf <- tdf |>   mutate(     mean_lexp = number(mean_lexp, digits = 1),     mean_gdp = currency(mean_gdp, code = \"USD\"),     wiki_link = href(paste0(\"https://en.wikipedia.org/wiki/\", country)),   )  tdf #> ℹ Trelliscope data frame: \"gapminder life expectancy\" located at #>   \"/home/runner/work/trelliscope/trelliscope/docs/articles/trelliscope_files/figure-html//gap1\" #>   with 2 panels: #> • \"lexp_time\": <ggpanel>     [no panel options specified] #>  #> • \"flag_url\" : <panel_url>   [no panel options specified] #> # A tibble: 142 × 10 #>    country     continent iso_alpha2 lexp_time  flag_url     mean_lexp   mean_gdp #>    <chr>       <fct>     <chr>      <ggpanels> <url_panels>  <number> <currency> #>  1 Afghanistan Asia      AF         <ggplot>   <img>             37.5     802.67 #>  2 Albania     Europe    AL         <ggplot>   <img>             68.4    3255.37 #>  3 Algeria     Africa    DZ         <ggplot>   <img>             59.0    4426.03 #>  4 Angola      Africa    AO         <ggplot>   <img>             37.9    3607.10 #>  5 Argentina   Americas  AR         <ggplot>   <img>             69.1    8955.55 #>  6 Australia   Oceania   AU         <ggplot>   <img>             74.7   19980.60 #>  7 Austria     Europe    AT         <ggplot>   <img>             73.1   20411.92 #>  8 Bahrain     Asia      BH         <ggplot>   <img>             65.6   18077.66 #>  9 Bangladesh  Asia      BD         <ggplot>   <img>             49.8     817.56 #> 10 Belgium     Europe    BE         <ggplot>   <img>             73.6   19900.76 #> # ℹ 132 more rows #> # ℹ 3 more variables: max_lexp_pct_chg <dbl>, dt_lexp_max_pct_chg <date>, #> #   wiki_link <href>"},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"updating-display-attributes-with-pipe-functions","dir":"Articles","previous_headings":"Customizing your Trelliscope app","what":"Updating display attributes with pipe functions","title":"Introduction to Trelliscope","text":"Trelliscope data frame simply data frame also keeps track attributes Trelliscope display. can modify attributes applying pipe functions pipe functions take Trelliscope data frame primary argument return modified Trelliscope data frame. following pipe functions available: set_panel_options() set_var_labels() set_tags() set_default_panel() set_default_filters() set_default_labels() set_default_layout() set_default_sort() add_inputs(): specify input variables capture user feedback panel add_view(): add pre-defined “view” allows users navigate specified states display set_info_html(): specify HTML display info panel viewer set_show_info_on_load(): specify whether show info panel load add_charm(): simple password protection generated app write_trelliscope() view_trelliscope() show examples several following sections.","code":""},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"setting-variable-labels-and-tags","dir":"Articles","previous_headings":"Customizing your Trelliscope app","what":"Setting variable labels and tags","title":"Introduction to Trelliscope","text":"help user better understanding variables represent associated, can use variable labels tags. Variable labels can added Trelliscope data frame using set_var_labels(). function takes named set parameters input, names indicating variable name values indicating labels. example: Note function simply adds “label” attribute specified column, common practice R handling labels data frames. data frame already labeled means adding attributes, need use function. many variables display, can useful add tags variables help user investigate variables associated concepts interest. Tags can added Trelliscope data frame using set_tags(). function takes named set parameters input, names indicating tag name values indicating variable names associate tag. example, tag indicating variables representing computed country “stats” tag indicates variables containing “info” country.","code":"tdf <- tdf |>   set_var_labels(     mean_lexp = \"Mean life expectancy\",     mean_gdp = \"Mean GDP per capita\",     max_lexp_pct_chg = \"Max % year-to-year change in life expectancy\",     dt_lexp_max_pct_chg = \"Date of max % year-to-year change in life expectancy\",     wiki_link = \"Link to country Wikipedia entry\"   ) tdf <- tdf |>   set_tags(     stats = c(\"mean_lexp\", \"mean_gdp\", \"max_lexp_pct_chg\"),     info = c(\"country\", \"continent\")   )"},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"setting-panel-options","dir":"Articles","previous_headings":"Customizing your Trelliscope app","what":"Setting panel options","title":"Introduction to Trelliscope","text":"Trelliscope defaults write show panel columns data frame. example, write tdf data frame, write “lexp_time” panel column 500x500 pixel png files. Suppose wish render 600x400 pixel svg files instead. can set_panel_options(). function takes named set parameters input, names indicating panel column name (can one) values call panel_options() allows us specify width, height, format “lexp_time”. also set aspect ratio “flag_url” panel specifying width height ratio (5:3 common aspect ratio flags). Note panels already exist files, units width height matter panels dynamically sized viewer thing matters aspect ratio displayed.","code":"tdf <- tdf |>   set_panel_options(     lexp_time = panel_options(width = 600, height = 400, format = \"svg\"),     flag_url = panel_options(width = 5, height = 3)   )"},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"setting-the-default-state-of-the-app","dir":"Articles","previous_headings":"Customizing your Trelliscope app","what":"Setting the default state of the app","title":"Introduction to Trelliscope","text":"Trelliscope apps default display panels order appear data frame. Often makes sense start user specific point app, pre-defining sorting filtering state, defining panel labels want user see initially.","code":""},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"set_default_labels","dir":"Articles","previous_headings":"Customizing your Trelliscope app > Setting the default state of the app","what":"set_default_labels()","title":"Introduction to Trelliscope","text":"default, “key columns” shown labels. ’d like change labels shown display opened, can use set_default_labels(), e.g.:","code":"tdf <- tdf |>   set_default_labels(c(\"country\", \"continent\", \"wiki_link\"))"},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"set_default_layout","dir":"Articles","previous_headings":"Customizing your Trelliscope app > Setting the default state of the app","what":"set_default_layout()","title":"Introduction to Trelliscope","text":"can also set default panel layout, example wish see 5 columns panels initial view app (number rows computed based size user’s browser window aspect ratio panels).","code":"tdf <- tdf |>   set_default_layout(ncol = 4)"},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"set_default_sort","dir":"Articles","previous_headings":"Customizing your Trelliscope app > Setting the default state of the app","what":"set_default_sort()","title":"Introduction to Trelliscope","text":"can set default sort order set_default_sort(). , provide vector variable names vector “asc” “desc” values inidicatingm ascending descending sort order.","code":"tdf <- tdf |>   set_default_sort(c(\"continent\", \"mean_lexp\"), dir = c(\"asc\", \"desc\"))"},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"set_default_filters","dir":"Articles","previous_headings":"Customizing your Trelliscope app > Setting the default state of the app","what":"set_default_filters()","title":"Introduction to Trelliscope","text":"can set default filter state set_default_filters(). Currently two different kinds filters: filter_range(varname, min = ..., max = ...): works numeric, date, datetime variables filter_string(varname, values = ...): works factor string variables types filters planned future.","code":"tdf <- tdf |>   set_default_filters(     filter_string(\"continent\", values = \"Africa\"),     filter_range(\"mean_lexp\", max = 50)   )"},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"defining-views","dir":"Articles","previous_headings":"Customizing your Trelliscope app","what":"Defining “views”","title":"Introduction to Trelliscope","text":"Views predefined sets state made available viewer help user conveniently get regions display interesting different ways. can add view chaining display add_view() function. add_view() takes name first argument, number state specifications. functions available set state following: state_layout() state_labels() state_sort() filter_string() filter_range() state_*() functions parameters behave similarly set_*() counterparts except unlike , receive Trelliscope data frame return Trelliscope data frame, instead just specify state. filter_*() functions seen already. example, suppose wish add view shows countries median life expectancy greater equal 60, sorted highest lowest median life expectancy: can add many views like chaining calls add_view().","code":"tdf <- tdf |>   add_view(     name = \"Countries with high life expectancy (mean >= 60)\",     filter_range(\"mean_lexp\", min = 60),     state_sort(\"mean_lexp\", dir = \"desc\")   )"},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"specifying-user-inputs","dir":"Articles","previous_headings":"Customizing your Trelliscope app","what":"Specifying user inputs","title":"Introduction to Trelliscope","text":"can add user inputs attached panel display using add_inputs() function. function takes number arguments created following functions: input_radio(name, label, options) input_text(name, label, width, height) input_checkbox(name, label, options) input_select(name, label, options) input_multiselect(name, label, options) input_number(name, label) specify different input types. example, want free text input comments well yes/question asking data looks correct panel, can following. Since Trelliscope app backed server, persistent storage user inputs currently supported. need get inputs back user, optional email argument can provided help user know get back . Let’s see operations reflected Trelliscope data frame:","code":"tdf <- tdf |>   add_inputs(     input_text(name = \"comments\", label = \"Comments about this panel\",       height = 6),     input_radio(name = \"looks_correct\",       label = \"Does the data look correct?\", options = c(\"no\", \"yes\"))   ) show_info(tdf) #> A trelliscope display #> • Name: \"gapminder life expectancy\" #> • Description: \"gapminder life expectancy\" #> • Tags: none #> • Key columns: \"country\", \"continent\", and \"iso_alpha2\" #> • Path: #>   \"/home/runner/work/trelliscope/trelliscope/docs/articles/trelliscope_files/figure-html//gap1\" #> • Number of panels: 142"},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"writing-and-viewing-the-app","dir":"Articles","previous_headings":"Customizing your Trelliscope app","what":"Writing and viewing the app","title":"Introduction to Trelliscope","text":"Now built Trelliscope data frame, can write specified write_trelliscope(). writes panels haven’t written yet writes JSON representation specifications made app consume. final output. Note can bypass write_trelliscope() going straight view_trelliscope() write_trelliscope() allows us things like force already-written panels re-render.","code":"tdf <- write_trelliscope(tdf) #> ℹ Inferred that variable 'mean_gdp' should be shown on log scale. #> ℹ Inferred that variable 'max_lexp_pct_chg' should be shown on log scale. #> ℹ No default \"layout\" state supplied for view 'Countries with high life #>   expectancy (mean >= 60)'. Using ncol=3. #> ℹ No default \"labels\" state supplied for view 'Countries with high life #>   expectancy (mean >= 60)'. Using country, continent, iso_alpha2. #> Writing lexp_time ■■■■                              11% | ETA:  8s #>  #> Writing lexp_time ■■■■■■■■■■■■■                     39% | ETA:  6s #>  #> Writing lexp_time ■■■■■■■■■■■■■■■■■■■■■■            70% | ETA:  3s #>  #> Writing lexp_time ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■  100% | ETA:  0s #>  #> ℹ Trelliscope written to #>   /home/runner/work/trelliscope/trelliscope/docs/articles/trelliscope_files/figure-html//gap1/index.html #>   Open this file or call view_trelliscope() to view. view_trelliscope(tdf) #> ℹ Replacing existing meta variable definition for country #> ℹ Replacing existing meta variable definition for continent #> ℹ Replacing existing meta variable definition for iso_alpha2 #> ℹ Replacing existing meta variable definition for lexp_time #> ℹ Replacing existing meta variable definition for flag_url #> ℹ Replacing existing meta variable definition for mean_lexp #> ℹ Inferred that variable 'mean_gdp' should be shown on log scale. #> ℹ Replacing existing meta variable definition for mean_gdp #> ℹ Inferred that variable 'max_lexp_pct_chg' should be shown on log scale. #> ℹ Replacing existing meta variable definition for max_lexp_pct_chg #> ℹ Replacing existing meta variable definition for dt_lexp_max_pct_chg #> ℹ Replacing existing meta variable definition for wiki_link"},{"path":"https://trelliscope.github.io/trelliscope/articles/trelliscope.html","id":"putting-it-all-together","dir":"Articles","previous_headings":"Customizing your Trelliscope app","what":"Putting it all together","title":"Introduction to Trelliscope","text":"example illustrates features available Trelliscope. seen initial examples, Trelliscope displays can created minimal code, additional functionality can added code. good amount code already natural many cases simply updating data frame new columns, etc. rest code simply specifying desired state app. additional features available Trelliscope covered can found visiting articles documentation: deeper dive creating panel columns Sharing embedding Trelliscope displays Visualizing large datasets Trelliscope","code":"# create initial Trelliscope data frame tdf <- (   ggplot(gap, aes(year, life_exp)) +     geom_point() +     facet_panels(vars(country, continent))   ) |>   as_panels_df(panel_col = \"lexp_time\") |>   as_trelliscope_df(name = \"gapminder life expectancy\")  # add variables gsumm <- gap |>   mutate(pct_chg = 100 * (life_exp - lag(life_exp)) / lag(life_exp)) |>   summarise(     mean_lexp = number(mean(life_exp), digits = 1),     mean_gdp = currency(mean(gdp_percap), code = \"USD\"),     max_lexp_pct_chg = max(pct_chg, na.rm = TRUE),     dt_lexp_max_pct_chg = as.Date(paste0(year[which.max(pct_chg)], \"-01-01\")),     wiki_link = href(paste0(\"https://en.wikipedia.org/wiki/\", country)),     .by = country   )  tdf <- left_join(tdf, gsumm, by = \"country\")  # set varialbe labels tdf <- tdf |>   set_var_labels(     mean_lexp = \"Mean life expectancy\",     mean_gdp = \"Mean GDP per capita\",     max_lexp_pct_chg = \"Max % year-to-year change in life expectancy\",     dt_lexp_max_pct_chg = \"Date of max % year-to-year change in life expectancy\",     wiki_link = \"Link to country Wikipedia entry\"   )  # set tags tdf <- tdf |>   set_tags(     stats = c(\"mean_lexp\", \"mean_gdp\", \"max_lexp_pct_chg\"),     info = c(\"country\", \"continent\")   )  # set panel options tdf <- tdf |>   set_panel_options(     lexp_time = panel_options_lazy(width = 600, height = 400, format = \"svg\")   )  # set default state tdf <- tdf |>   set_default_labels(c(\"country\", \"continent\", \"wiki_link\")) |>   set_default_layout(ncol = 4) |>   set_default_sort(c(\"continent\", \"mean_lexp\"), dir = c(\"asc\", \"desc\")) |>   set_default_filters(     filter_string(\"continent\", values = \"Africa\"),     filter_range(\"mean_lexp\", max = 50)   )  # add a view tdf <- tdf |>   add_view(     name = \"Countries with high life expectancy (mean >= 60)\",     filter_range(\"mean_lexp\", min = 60),     state_sort(\"mean_lexp\", dir = \"desc\")   )  # add user inputs tdf <- tdf |>   add_inputs(     input_text(name = \"comments\", label = \"Comments about this panel\",       height = 6),     input_radio(name = \"looks_correct\",       label = \"Does the data look correct?\", options = c(\"no\", \"yes\"))   )  # view the display view_trelliscope(tdf)"},{"path":"https://trelliscope.github.io/trelliscope/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ryan Hafen. Author, maintainer, copyright holder.","code":""},{"path":"https://trelliscope.github.io/trelliscope/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hafen R (2024). trelliscope: Create Interactive Trelliscope Displays. R package version 0.1.8, https://github.com/trelliscope/trelliscope, https://trelliscope.org/trelliscope.","code":"@Manual{,   title = {trelliscope: Create Interactive Trelliscope Displays},   author = {Ryan Hafen},   year = {2024},   note = {R package version 0.1.8, https://github.com/trelliscope/trelliscope},   url = {https://trelliscope.org/trelliscope}, }"},{"path":"https://trelliscope.github.io/trelliscope/index.html","id":"trelliscope-","dir":"","previous_headings":"","what":"Interactively Explore Data Frames of Visualizations","title":"Interactively Explore Data Frames of Visualizations","text":"Trelliscope R package enables interactive exploration data frames visualizations.","code":""},{"path":"https://trelliscope.github.io/trelliscope/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Interactively Explore Data Frames of Visualizations","text":"","code":"remotes::install_github(\"trelliscope/trelliscope\")"},{"path":"https://trelliscope.github.io/trelliscope/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Interactively Explore Data Frames of Visualizations","text":"Trelliscope provides utilities create visualize data frames visualizations. visualizations can anything can produce R, can also simply links images already created. simple example, package comes example data frame links Mars Curiosity Rover images. row represents one image taken rover associated metadata. Casting data frame trelliscope data frame gives us ability build interactive display. additional configuration, can simply view images referenced img_src column interactively navigate using provided metadata following:  scratches surface functions found package. beginning tutorial, can dive deeper topics including: Create view data frames visualizations created R (e.g. ggplot2, htmlwidgets) Add interactivity additional variables metadata Set initial pre-defined views Specify user inputs can collected labeling capturing insights domain knowledge Embed interactive visualizations common output formats Visualize large datasets Get started tutorial","code":"library(trelliscope)  mars_rover #> # A tibble: 1,245 × 5 #>    camera                  sol earth_date class   img_src #>    <chr>                 <int> <chr>      <chr>   <chr> #>  1 Mars Hand Lens Imager   565 2014-03-09 horizon http://mars.jpl.nasa.gov/m… #>  2 Mars Hand Lens Imager   565 2014-03-09 horizon http://mars.jpl.nasa.gov/m… #>  3 Mars Hand Lens Imager   568 2014-03-12 wheel   http://mars.jpl.nasa.gov/m… #>  4 Mars Hand Lens Imager   568 2014-03-12 wheel   http://mars.jpl.nasa.gov/m… #>  5 Mars Hand Lens Imager   568 2014-03-12 wheel   http://mars.jpl.nasa.gov/m… #> # … with 1,240 more rows d <- as_trelliscope_df(mars_rover, name = \"mars rover\") d #> ℹ Trelliscope data frame. Call show_info() for more information #> # A tibble: 1,245 × 5 #>    camera                  sol earth_date class   img_src #>    <chr>                 <int> <chr>      <chr>   <chr> #>  1 Mars Hand Lens Imager   565 2014-03-09 horizon http://mars.jpl.nasa.gov/m… #>  2 Mars Hand Lens Imager   565 2014-03-09 horizon http://mars.jpl.nasa.gov/m… #>  3 Mars Hand Lens Imager   568 2014-03-12 wheel   http://mars.jpl.nasa.gov/m… #>  4 Mars Hand Lens Imager   568 2014-03-12 wheel   http://mars.jpl.nasa.gov/m… #>  5 Mars Hand Lens Imager   568 2014-03-12 wheel   http://mars.jpl.nasa.gov/m… #> # … with 1,240 more rows view_trelliscope(d)"},{"path":"https://trelliscope.github.io/trelliscope/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Interactively Explore Data Frames of Visualizations","text":"Much development Trelliscope funded years support US government grants following: DARPA XDATA big data initiative DOE SBIR DE-FOA-0001940 DoD SBIR Many thanks agencies associated funding programs support sustaining open source project.","code":""},{"path":"https://trelliscope.github.io/trelliscope/index.html","id":"note","dir":"","previous_headings":"","what":"Note","title":"Interactively Explore Data Frames of Visualizations","text":"package reimagines supersedes trelliscopejs R package.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/add_charm.html","id":null,"dir":"Reference","previous_headings":"","what":"Use fidelius to password protect a trelliscope display — add_charm","title":"Use fidelius to password protect a trelliscope display — add_charm","text":"Use fidelius password protect trelliscope display","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/add_charm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use fidelius to password protect a trelliscope display — add_charm","text":"","code":"add_charm(trdf, ...)"},{"path":"https://trelliscope.github.io/trelliscope/reference/add_charm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use fidelius to password protect a trelliscope display — add_charm","text":"trdf trelliscope data frame created as_trelliscope_df() data frame cast . ... Arguments passed charm() function fidelius package.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/add_inputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Add inputs to a trelliscope display — add_inputs","title":"Add inputs to a trelliscope display — add_inputs","text":"Add inputs trelliscope display","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/add_inputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add inputs to a trelliscope display — add_inputs","text":"","code":"add_inputs(trdf, ..., email = NULL, vars = NULL)"},{"path":"https://trelliscope.github.io/trelliscope/reference/add_inputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add inputs to a trelliscope display — add_inputs","text":"trdf trelliscope data frame created as_trelliscope_df() data frame cast . ... number input specifications. can specified input_number(), input_radio(), input_checkbox(), input_select(), input_multiselect(), input_text() email email address (optional). vars vector meta variable names found display. made available columns csv download user inputs.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/add_trelliscope_resource_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Trelliscope resource path for Shiny app — add_trelliscope_resource_path","title":"Add Trelliscope resource path for Shiny app — add_trelliscope_resource_path","text":"Add Trelliscope resource path Shiny app","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/add_trelliscope_resource_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Trelliscope resource path for Shiny app — add_trelliscope_resource_path","text":"","code":"add_trelliscope_resource_path(prefix, path)"},{"path":"https://trelliscope.github.io/trelliscope/reference/add_trelliscope_resource_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Trelliscope resource path for Shiny app — add_trelliscope_resource_path","text":"prefix, path See shiny::addResourcePath()","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/add_view.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a view specification to a trelliscope display — add_view","title":"Add a view specification to a trelliscope display — add_view","text":"Add view specification trelliscope display","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/add_view.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a view specification to a trelliscope display — add_view","text":"","code":"add_view(trdf, name, ...)"},{"path":"https://trelliscope.github.io/trelliscope/reference/add_view.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a view specification to a trelliscope display — add_view","text":"trdf trelliscope data frame created as_trelliscope_df() data frame cast . name name view. ... number state specifications define view. can specified state_layout(), state_labels(), state_sort(), filter_string(), filter_range().","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/as_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert any trelliscope R6 object to JSON — as_json","title":"Convert any trelliscope R6 object to JSON — as_json","text":"Convert trelliscope R6 object JSON","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/as_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert any trelliscope R6 object to JSON — as_json","text":"","code":"as_json(trdf, pretty = TRUE)"},{"path":"https://trelliscope.github.io/trelliscope/reference/as_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert any trelliscope R6 object to JSON — as_json","text":"trdf trelliscope data frame created as_trelliscope_df() data frame cast . pretty Adds indentation whitespace JSON output. Can TRUE/FALSE number specifying number spaces indent.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/as_panels_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Render the panels of a trelliscope display — as_panels_df","title":"Render the panels of a trelliscope display — as_panels_df","text":"Render panels trelliscope display","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/as_panels_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render the panels of a trelliscope display — as_panels_df","text":"","code":"as_panels_df(   x,   panel_col = \"panel\",   keep_cols = NULL,   as_plotly = FALSE,   plotly_args = NULL,   plotly_cfg = NULL )"},{"path":"https://trelliscope.github.io/trelliscope/reference/as_panels_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render the panels of a trelliscope display — as_panels_df","text":"x ggplot object created facet_panels(). panel_col name column store rendered panels . keep_cols optional vector extra variable names x keep data. specified, values vary within combination specified facet variables. as_plotly panels written plotly objects? plotly_args Optional named list arguments send ggplotly plotly_cfg Optional named list arguments send plotly's `config`` method.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/as_trelliscope_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Instantiate a trelliscope data frame — as_trelliscope_df","title":"Instantiate a trelliscope data frame — as_trelliscope_df","text":"Instantiate trelliscope data frame","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/as_trelliscope_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Instantiate a trelliscope data frame — as_trelliscope_df","text":"","code":"as_trelliscope_df(   df,   name = NULL,   description = name,   key_cols = NULL,   tags = NULL,   path = NULL,   force_plot = FALSE,   key_sig = NULL,   order = 0,   jsonp = TRUE )"},{"path":"https://trelliscope.github.io/trelliscope/reference/as_trelliscope_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Instantiate a trelliscope data frame — as_trelliscope_df","text":"df data frame contains metadata display well column indicate panels displayed. name Name trelliscope display. description Description trelliscope display. key_cols Variable names df uniquely define row data. supplied, attempt made infer . tags Optional vector tag names identify display case many search . path Directory place trelliscope display written using write_trelliscope(). force_plot panels forced plotted, even already plotted changed since previous plotting? key_sig string \"signature\" represents panels display. specified unless know . order multiple displays directory, can used specify order listed. display lowest order shown load. jsonp true, app data files written \"jsonp\" format, otherwise \"json\" format. \"jsonp\" format makes possible browse trelliscope app without need web server set TRUE default. Use \"json\" deploying web server work well \"jsonp\".","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/as_trelliscope_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Instantiate a trelliscope data frame — as_trelliscope_df","text":"","code":"# Use `as_trelliscope_df()` to convert panel metadata to a special # trelliscope data frame library(ggplot2) library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  panel_dat <- (   ggplot(gap, aes(year, life_exp)) +     geom_point() +     facet_panels(vars(country, continent))   ) |>     as_panels_df()  meta_dat <- gap |>   group_by(country, continent) |>   summarise(     mean_life_exp = mean(life_exp),     min_life_exp = min(life_exp),     max_life_exp = max(life_exp),     mean_gdp = mean(gdp_percap),     .groups = \"drop\"   )  joined_dat <- left_join(panel_dat, meta_dat) |>   as_trelliscope_df(name = \"life_expectancy\", path = tempfile()) #> Joining with `by = join_by(country, continent)`  if (FALSE) { view_trelliscope(joined_dat) }  # You can also use `as_trelliscope_df()` on datasets that have links to # images instead of conventional ggplot objects if (FALSE) { }"},{"path":"https://trelliscope.github.io/trelliscope/reference/currencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Data frame of currencies and their codes — currencies","title":"Data frame of currencies and their codes — currencies","text":"Data frame currencies codes","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/currencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data frame of currencies and their codes — currencies","text":"","code":"currencies"},{"path":"https://trelliscope.github.io/trelliscope/reference/currencies.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data frame of currencies and their codes — currencies","text":"object class spec_tbl_df (inherits tbl_df, tbl, data.frame) 278 rows 5 columns.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/currencies.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data frame of currencies and their codes — currencies","text":"https://www.six-group.com/en/products-services/financial-information/data-standards.html#scrollTo=maintenance-agency","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/currency.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a currency vector — currency","title":"Create a currency vector — currency","text":"Create currency vector","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/currency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a currency vector — currency","text":"","code":"currency(x = double(), code = \"USD\", digits = 2, locale = TRUE, log = NULL)"},{"path":"https://trelliscope.github.io/trelliscope/reference/currency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a currency vector — currency","text":"x numeric vector. code Currency code. See currencies list possibilities. digits many digits round displaying number. NULL, digits shown. Default 2. locale variable displayed using locale? log variable's distribution shown log scale? specified, inference made based values.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/facet_panels.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a trelliscope facet to a ggplot — facet_panels","title":"Add a trelliscope facet to a ggplot — facet_panels","text":"Add trelliscope facet ggplot","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/facet_panels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a trelliscope facet to a ggplot — facet_panels","text":"","code":"facet_panels(   facets,   scales = \"same\",   add_plot_metrics = FALSE,   unfacet = c(\"none\", \"line\", \"point\"),   unfacet_col = \"gray\",   unfacet_alpha = 0.4,   data = ggplot2::waiver() )"},{"path":"https://trelliscope.github.io/trelliscope/reference/facet_panels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a trelliscope facet to a ggplot — facet_panels","text":"facets formula facet panels . Similar ggplot2::facet_wrap()'s `facets`` scales scales (\"\", default), free (\"free\"), sliced (\"sliced\"). May provide single string two strings, one X Y axis respectively. add_plot_metrics metrics panel automatically calculated? metrics based context plotted, e.g. correlation coefficient plot scatterplot. unfacet Specifies whether \"unfacet\" data data appears background plot. Options \"none\" (default), \"line\" \"point\". latter two options add either line point layer, grouped faceting variables, underneath panel. useful time series plots viewing panel relation others. unfacet_col color use \"unfacet\" lines points. unfacet_alpha alpha use \"unfacet\" lines points. data data used faceting. Defaults main data argument ggplot2::ggplot().","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/facet_panels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a trelliscope facet to a ggplot — facet_panels","text":"","code":"# You can run facet_panels() just like how you would run facet_wrap() library(ggplot2)  if (FALSE) { ggplot(gap, aes(year, life_exp)) +   geom_point() +   facet_panels(vars(country, continent)) }  # facet_panels can also be a jumping off point into setting up a more # developed trelliscope by passing into `as_panels_df()` to create a nested # trelliscope data frame for additional editing. library(ggplot2) library(dplyr)  panel_dat <- (   ggplot(gap, aes(year, life_exp)) +   geom_point() +   facet_panels(vars(country, continent)) ) |>   as_panels_df()  trell_df <- panel_dat |>   as_trelliscope_df(name = \"life expectancy\", path = \"gapminder\") |>   set_default_layout(ncol = 4)  if (FALSE) { view_trelliscope(trell_df) }"},{"path":"https://trelliscope.github.io/trelliscope/reference/filter_cat_href.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a link to another display filtered to categories of a variable — filter_cat_href","title":"Create a link to another display filtered to categories of a variable — filter_cat_href","text":"Create link another display filtered categories variable","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/filter_cat_href.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a link to another display filtered to categories of a variable — filter_cat_href","text":"","code":"filter_cat_href(   display_name,   varname,   values = NULL,   labels = NULL,   prefix = NULL )"},{"path":"https://trelliscope.github.io/trelliscope/reference/filter_cat_href.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a link to another display filtered to categories of a variable — filter_cat_href","text":"display_name name display link . varname name variable filter . values values variable filter . labels Labels linked display show. prefix prefix add link. needed display part app.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/filter_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a range ","title":"Specify a range ","text":"Specify range \"filter\" state (applies numeric, date, datetime meta variables)","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/filter_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a range ","text":"","code":"filter_range(varname, min = NULL, max = NULL)"},{"path":"https://trelliscope.github.io/trelliscope/reference/filter_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a range ","text":"varname name variable filter . min Lower bound range (NULL, lower bound). max Upper bound range (NULL, upper bound).","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/filter_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a string ","title":"Specify a string ","text":"Specify string \"filter\" state (applies string factor meta variables)","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/filter_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a string ","text":"","code":"filter_string(varname, regexp = NULL, values = NULL)"},{"path":"https://trelliscope.github.io/trelliscope/reference/filter_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a string ","text":"varname name variable filter . regexp search string can regular expression indicating values variable filter . values vector specific values variable filter . values specified, regexp ignored.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/gap.html","id":null,"dir":"Reference","previous_headings":"","what":"Gapminder data with ISO codes and country centroids — gap","title":"Gapminder data with ISO codes and country centroids — gap","text":"Gapminder data ISO codes country centroids","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/gap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gapminder data with ISO codes and country centroids — gap","text":"","code":"gap"},{"path":"https://trelliscope.github.io/trelliscope/reference/gap.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gapminder data with ISO codes and country centroids — gap","text":"object class tbl_df (inherits tbl, data.frame) 1704 rows 9 columns.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/gap.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Gapminder data with ISO codes and country centroids — gap","text":"https://cran.r-project.org/web/packages/gapminder/index.html","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/href.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a vector of links — href","title":"Create a vector of links — href","text":"Create vector links","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/href.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a vector of links — href","text":"","code":"href(x = character())"},{"path":"https://trelliscope.github.io/trelliscope/reference/href.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a vector of links — href","text":"x character vector.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/input_checkbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a ","title":"Specify a ","text":"Specify \"checkbox\" input","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/input_checkbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a ","text":"","code":"input_checkbox(name, label = name, active = TRUE, options)"},{"path":"https://trelliscope.github.io/trelliscope/reference/input_checkbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a ","text":"name Name input. label Description input. active input active default? options vector checkbox options.","code":""},{"path":[]},{"path":"https://trelliscope.github.io/trelliscope/reference/input_checkbox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify a ","text":"","code":"library(ggplot2) library(dplyr)  panel_dat <- (   ggplot(gap, aes(year, life_exp)) +     geom_point() +     facet_panels(vars(country, continent))   ) |>   as_panels_df()  trell <- panel_dat |> as_trelliscope_df() |> add_inputs(   input_checkbox(     name = \"Checkbox Input\",     label = \"A space to add custom button inputs\",     options = c(\"yes\", \"no\")   ) ) if (FALSE) { view_trelliscope(trell) }"},{"path":"https://trelliscope.github.io/trelliscope/reference/input_multiselect.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a ","title":"Specify a ","text":"Specify \"multiselect\" input","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/input_multiselect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a ","text":"","code":"input_multiselect(name, label = name, active = TRUE, options)"},{"path":"https://trelliscope.github.io/trelliscope/reference/input_multiselect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a ","text":"name Name input. label Description input. active input active default? options vector options multiselect dropdown.","code":""},{"path":[]},{"path":"https://trelliscope.github.io/trelliscope/reference/input_multiselect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify a ","text":"","code":"library(ggplot2) library(dplyr)  panel_dat <- (   ggplot(gap, aes(year, life_exp)) +     geom_point() +     facet_panels(vars(country, continent))   ) |>   as_panels_df()  trell <- panel_dat |> as_trelliscope_df() |> add_inputs(   input_multiselect(     name = \"Multiselect Input\",     label = \"A space to add custom dropdown inputs\",     options =c(\"yes\", \"no\")   ) ) if (FALSE) { view_trelliscope(trell) }"},{"path":"https://trelliscope.github.io/trelliscope/reference/input_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a ","title":"Specify a ","text":"Specify \"numeric\" input box","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/input_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a ","text":"","code":"input_number(name, label = name, active = TRUE, min = NULL, max = NULL)"},{"path":"https://trelliscope.github.io/trelliscope/reference/input_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a ","text":"name Name input. label Description input. active input active default? min Optional minimum value allow input. max Optional maximum value allow input.","code":""},{"path":[]},{"path":"https://trelliscope.github.io/trelliscope/reference/input_number.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify a ","text":"","code":"library(ggplot2) library(dplyr)  panel_dat <- (   ggplot(gap, aes(year, life_exp)) +     geom_point() +     facet_panels(vars(country, continent))   ) |>   as_panels_df()  trell <- panel_dat |> as_trelliscope_df() |> add_inputs(   input_number(     name = \"Numeric Input\",     label = \"A space to add custom ranking for sorting\",     min = 0, max = 10   ) ) if (FALSE) { view_trelliscope(trell) }"},{"path":"https://trelliscope.github.io/trelliscope/reference/input_radio.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a ","title":"Specify a ","text":"Specify \"radio button\" input","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/input_radio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a ","text":"","code":"input_radio(name, label = name, active = TRUE, options)"},{"path":"https://trelliscope.github.io/trelliscope/reference/input_radio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a ","text":"name Name input. label Description input. active input active default? options vector radio button options.","code":""},{"path":[]},{"path":"https://trelliscope.github.io/trelliscope/reference/input_radio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify a ","text":"","code":"library(ggplot2) library(dplyr)  panel_dat <- (   ggplot(gap, aes(year, life_exp)) +     geom_point() +     facet_panels(vars(country, continent))   ) |>   as_panels_df()  trell <- panel_dat |> as_trelliscope_df() |> add_inputs(   input_radio(     name = \"Radio Input\",     label = \"A space to add custom ranking for sorting\",     options = c(\"yes\", \"no\")   ) ) if (FALSE) { view_trelliscope(trell) }"},{"path":"https://trelliscope.github.io/trelliscope/reference/input_select.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a ","title":"Specify a ","text":"Specify \"select\" input","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/input_select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a ","text":"","code":"input_select(name, label = name, active = TRUE, options)"},{"path":"https://trelliscope.github.io/trelliscope/reference/input_select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a ","text":"name Name input. label Description input. active input active default? options vector options select dropdown.","code":""},{"path":[]},{"path":"https://trelliscope.github.io/trelliscope/reference/input_select.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify a ","text":"","code":"library(ggplot2) library(dplyr)  panel_dat <- (   ggplot(gap, aes(year, life_exp)) +     geom_point() +     facet_panels(vars(country, continent))   ) |>   as_panels_df()  trell <- panel_dat |> as_trelliscope_df() |> add_inputs(   input_select(     name = \"Select Input\",     label = \"A space to add custom dropdown inputs\",     options =c(\"yes\", \"no\")   ) ) if (FALSE) { view_trelliscope(trell) }"},{"path":"https://trelliscope.github.io/trelliscope/reference/input_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a ","title":"Specify a ","text":"Specify \"text box\" input","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/input_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a ","text":"","code":"input_text(name, label = name, active = TRUE, height = 3)"},{"path":"https://trelliscope.github.io/trelliscope/reference/input_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a ","text":"name Name input. label Description input. active input active default? height Height (lines text) text box input.","code":""},{"path":[]},{"path":"https://trelliscope.github.io/trelliscope/reference/input_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify a ","text":"","code":"library(ggplot2) library(dplyr)  panel_dat <- (   ggplot(gap, aes(year, life_exp)) +     geom_point() +     facet_panels(vars(country, continent))   ) |>   as_panels_df()  trell <- panel_dat |>   as_trelliscope_df() |>   add_inputs(     input_text(       name = \"Text Input\",       label = \"A space to add custom text input\"     ) ) if (FALSE) { view_trelliscope(trell) }"},{"path":"https://trelliscope.github.io/trelliscope/reference/mars_rover.html","id":null,"dir":"Reference","previous_headings":"","what":"Mars rover data — mars_rover","title":"Mars rover data — mars_rover","text":"Mars rover data","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/mars_rover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mars rover data — mars_rover","text":"","code":"mars_rover"},{"path":"https://trelliscope.github.io/trelliscope/reference/mars_rover.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mars rover data — mars_rover","text":"object class tbl_df (inherits tbl, data.frame) 1245 rows 11 columns.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/mars_rover.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mars rover data — mars_rover","text":"https://github.com/corincerami/mars-photo-api","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/number.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a number vector — number","title":"Create a number vector — number","text":"Create number vector","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a number vector — number","text":"","code":"number(x = double(), digits = 2, locale = TRUE, log = NULL)"},{"path":"https://trelliscope.github.io/trelliscope/reference/number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a number vector — number","text":"x numeric vector. digits many digits round displaying number. specified, value inferred. -1, digits shown. locale variable displayed using locale? example, 1234.56 US displayed 1,234.56. log variable's distribution shown log scale? specified, inference made based values.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/panel_lazy.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a ","title":"Add a ","text":"Add \"calculated panel\" column dataset","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/panel_lazy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a ","text":"","code":"panel_lazy(plot_fn, data = dplyr::pick(dplyr::everything()))"},{"path":"https://trelliscope.github.io/trelliscope/reference/panel_lazy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a ","text":"plot_fn function produces panel given subset data, taking arguments variable names data like available plottinf function. data data frame subsets extracted plots made. superset summary dataset plot column added.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/panel_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a ","title":"Add a ","text":"Add \"panel_local\" column dataset","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/panel_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a ","text":"","code":"panel_local(x = character(), type = NULL)"},{"path":"https://trelliscope.github.io/trelliscope/reference/panel_local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a ","text":"x character vector paths local files used panels. type \"type\" panel (\"img\" \"iframe\"). NULL, inferred file extension.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/panel_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify options for lazily-rendered panels in a Trelliscope display — panel_options","title":"Specify options for lazily-rendered panels in a Trelliscope display — panel_options","text":"Specify options lazily-rendered panels Trelliscope display","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/panel_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify options for lazily-rendered panels in a Trelliscope display — panel_options","text":"","code":"panel_options(   width = NULL,   height = NULL,   format = NULL,   force = FALSE,   prerender = TRUE )"},{"path":"https://trelliscope.github.io/trelliscope/reference/panel_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify options for lazily-rendered panels in a Trelliscope display — panel_options","text":"width Width pixels panel. height Height pixels panel. format format panels server provide. Can one \"png\" , \"svg\", \"html\". Ignored panel lazy. force server force panels written? FALSE, panel already generated, made available. Ignored panel lazy. prerender \"TRUE\", lazy panels rendered prior viewing display. \"FALSE\", local R websockets server created plots rendered fly requested app. latter available using Trelliscope locally.  Ignored panel lazy.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/panel_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify options for lazily-rendered panels in a Trelliscope display — panel_options","text":"","code":"mars_rover |>   as_trelliscope_df(name = \"mars rover\") |>   set_panel_options(img_src = panel_options(width = 2, height = 1)) #> ℹ Using the variable \"id\" to uniquely identify each row of the data. #> ℹ Trelliscope data frame: \"mars rover\" located at #>   \"/tmp/RtmpTg5J4E/file18505f19a872\" with 1 panel: #> • \"img_src\": <panel_url>   [aspect=2] #> # A tibble: 1,245 × 11 #>       id camera   sol earth_date class width height filesize hex     hue img_src #>    <int> <chr>  <int> <date>     <chr> <int>  <int>    <int> <chr> <dbl> <url_p> #>  1  3560 Mars …   565 2014-03-09 hori…   192    144     5656 #7C6…  31.4 <img>   #>  2 74689 Mars …   565 2014-03-09 hori…  1632   1200   592880 #7B6…  32.9 <img>   #>  3  3558 Mars …   568 2014-03-12 wheel   192    144     9123 #3C3…  33.9 <img>   #>  4 74630 Mars …   568 2014-03-12 wheel  1632   1200   567528 #4F4…  31.1 <img>   #>  5 74631 Mars …   568 2014-03-12 wheel  1632   1200   556007 #4B4…  32.5 <img>   #>  6 74632 Mars …   568 2014-03-12 wheel  1632   1200   721995 #564…  33.1 <img>   #>  7 74633 Mars …   568 2014-03-12 wheel  1632   1200   511984 #433…  32.3 <img>   #>  8 74634 Mars …   568 2014-03-12 wheel  1632   1200   523267 #3C3…  32.3 <img>   #>  9 74635 Mars …   568 2014-03-12 wheel  1632   1200   580228 #3D3…  32.5 <img>   #> 10 74637 Mars …   568 2014-03-12 wheel   192    144    10522 #4E4…  32.3 <img>   #> # ℹ 1,235 more rows # TODO"},{"path":"https://trelliscope.github.io/trelliscope/reference/panel_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a ","title":"Add a ","text":"Add \"panel_url\" column dataset","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/panel_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a ","text":"","code":"panel_url(urls, type = NULL)"},{"path":"https://trelliscope.github.io/trelliscope/reference/panel_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a ","text":"urls character vector URLs used panels. type \"type\" panel (\"img\" \"iframe\"). NULL, inferred file extension.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/set_default_filters.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a filter state specifications to a trelliscope display — set_default_filters","title":"Add a filter state specifications to a trelliscope display — set_default_filters","text":"Add filter state specifications trelliscope display","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/set_default_filters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a filter state specifications to a trelliscope display — set_default_filters","text":"","code":"set_default_filters(trdf, ..., add = TRUE)"},{"path":"https://trelliscope.github.io/trelliscope/reference/set_default_filters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a filter state specifications to a trelliscope display — set_default_filters","text":"trdf trelliscope data frame created as_trelliscope_df() data frame cast . ... Filter state specifications (e.g. filter_string(), filter_range()). add existing filter state specifications added ? Default TRUE. FALSE, entire sort specification overridden.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/set_default_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a labels state specification to a trelliscope display — set_default_labels","title":"Add a labels state specification to a trelliscope display — set_default_labels","text":"Add labels state specification trelliscope display","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/set_default_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a labels state specification to a trelliscope display — set_default_labels","text":"","code":"set_default_labels(trdf, varnames)"},{"path":"https://trelliscope.github.io/trelliscope/reference/set_default_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a labels state specification to a trelliscope display — set_default_labels","text":"trdf trelliscope data frame created as_trelliscope_df() data frame cast . varnames vector variable names whose values appear labels. NULL, labels displayed. viewing display.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/set_default_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a layout state specification to a trelliscope display — set_default_layout","title":"Add a layout state specification to a trelliscope display — set_default_layout","text":"Add layout state specification trelliscope display","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/set_default_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a layout state specification to a trelliscope display — set_default_layout","text":"","code":"set_default_layout(   trdf,   ncol = 1,   page = 1,   sidebar = FALSE,   visible_filters = NULL )"},{"path":"https://trelliscope.github.io/trelliscope/reference/set_default_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a layout state specification to a trelliscope display — set_default_layout","text":"trdf trelliscope data frame created as_trelliscope_df() data frame cast . ncol Number columns panels show. page page number show. sidebar sidebar shown? visible_filters vector variable names add visible filters sidebar.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/set_default_sort.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a labels state specification to a trelliscope display — set_default_sort","title":"Add a labels state specification to a trelliscope display — set_default_sort","text":"Add labels state specification trelliscope display","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/set_default_sort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a labels state specification to a trelliscope display — set_default_sort","text":"","code":"set_default_sort(trdf, varnames, dirs = \"asc\", add = FALSE)"},{"path":"https://trelliscope.github.io/trelliscope/reference/set_default_sort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a labels state specification to a trelliscope display — set_default_sort","text":"trdf trelliscope data frame created as_trelliscope_df() data frame cast . varnames vector variable names sort . dirs vector directions sort (\"asc\" \"desc\"). add existing sort specification added ? FALSE (default), entire sort specification overridden.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/set_info_html.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify custom ","title":"Specify custom ","text":"Specify custom \"display info\" html","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/set_info_html.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify custom ","text":"","code":"set_info_html(trdf, file)"},{"path":"https://trelliscope.github.io/trelliscope/reference/set_info_html.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify custom ","text":"trdf trelliscope data frame created as_trelliscope_df() data frame cast . file Path existing html file use.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/set_panel_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Set panel options for a Trelliscope display — set_panel_options","title":"Set panel options for a Trelliscope display — set_panel_options","text":"Set panel options Trelliscope display","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/set_panel_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set panel options for a Trelliscope display — set_panel_options","text":"","code":"set_panel_options(trdf, ...)"},{"path":"https://trelliscope.github.io/trelliscope/reference/set_panel_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set panel options for a Trelliscope display — set_panel_options","text":"trdf trelliscope data frame created as_trelliscope_df() ... named set panel options set. names correspond names variables data frame. values come panel_options().","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/set_panel_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set panel options for a Trelliscope display — set_panel_options","text":"","code":"mars_rover |>   as_trelliscope_df(name = \"mars rover\") |>   set_panel_options(img_src = panel_options(width = 2, height = 1)) #> ℹ Using the variable \"id\" to uniquely identify each row of the data. #> ℹ Trelliscope data frame: \"mars rover\" located at #>   \"/tmp/RtmpTg5J4E/file18505db7f362\" with 1 panel: #> • \"img_src\": <panel_url>   [aspect=2] #> # A tibble: 1,245 × 11 #>       id camera   sol earth_date class width height filesize hex     hue img_src #>    <int> <chr>  <int> <date>     <chr> <int>  <int>    <int> <chr> <dbl> <url_p> #>  1  3560 Mars …   565 2014-03-09 hori…   192    144     5656 #7C6…  31.4 <img>   #>  2 74689 Mars …   565 2014-03-09 hori…  1632   1200   592880 #7B6…  32.9 <img>   #>  3  3558 Mars …   568 2014-03-12 wheel   192    144     9123 #3C3…  33.9 <img>   #>  4 74630 Mars …   568 2014-03-12 wheel  1632   1200   567528 #4F4…  31.1 <img>   #>  5 74631 Mars …   568 2014-03-12 wheel  1632   1200   556007 #4B4…  32.5 <img>   #>  6 74632 Mars …   568 2014-03-12 wheel  1632   1200   721995 #564…  33.1 <img>   #>  7 74633 Mars …   568 2014-03-12 wheel  1632   1200   511984 #433…  32.3 <img>   #>  8 74634 Mars …   568 2014-03-12 wheel  1632   1200   523267 #3C3…  32.3 <img>   #>  9 74635 Mars …   568 2014-03-12 wheel  1632   1200   580228 #3D3…  32.5 <img>   #> 10 74637 Mars …   568 2014-03-12 wheel   192    144    10522 #4E4…  32.3 <img>   #> # ℹ 1,235 more rows"},{"path":"https://trelliscope.github.io/trelliscope/reference/set_primary_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the primary panel of a trelliscope display — set_primary_panel","title":"Set the primary panel of a trelliscope display — set_primary_panel","text":"Set primary panel trelliscope display","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/set_primary_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the primary panel of a trelliscope display — set_primary_panel","text":"","code":"set_primary_panel(trdf, name)"},{"path":"https://trelliscope.github.io/trelliscope/reference/set_primary_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the primary panel of a trelliscope display — set_primary_panel","text":"trdf trelliscope data frame created as_trelliscope_df() data frame cast . name name panel set primary panel viewed launching app.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/set_show_info_on_load.html","id":null,"dir":"Reference","previous_headings":"","what":"Show ","title":"Show ","text":"Show \"display info\" display first loads","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/set_show_info_on_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show ","text":"","code":"set_show_info_on_load(trdf, show = TRUE)"},{"path":"https://trelliscope.github.io/trelliscope/reference/set_show_info_on_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show ","text":"trdf trelliscope data frame created as_trelliscope_df() data frame cast . show display info shown load?","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/set_tags.html","id":null,"dir":"Reference","previous_headings":"","what":"Set tags for variables in a data frame — set_tags","title":"Set tags for variables in a data frame — set_tags","text":"Set tags variables data frame","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/set_tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set tags for variables in a data frame — set_tags","text":"","code":"set_tags(d, ...)"},{"path":"https://trelliscope.github.io/trelliscope/reference/set_tags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set tags for variables in a data frame — set_tags","text":"d data frame. ... named set vectors variable names, name tag value vector corresponds one variables dataset.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/set_tags.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set tags for variables in a data frame — set_tags","text":"","code":"set_tags(iris,   info = \"Species\",   metrics = c(\"Sepal.Length\", \"Sepal.Width\", \"Petal.Length\", \"Petal.Width\"),   width = c(\"Sepal.Width\", \"Petal.Width\")) #>     Sepal.Length Sepal.Width Petal.Length Petal.Width    Species #> 1            5.1         3.5          1.4         0.2     setosa #> 2            4.9         3.0          1.4         0.2     setosa #> 3            4.7         3.2          1.3         0.2     setosa #> 4            4.6         3.1          1.5         0.2     setosa #> 5            5.0         3.6          1.4         0.2     setosa #> 6            5.4         3.9          1.7         0.4     setosa #> 7            4.6         3.4          1.4         0.3     setosa #> 8            5.0         3.4          1.5         0.2     setosa #> 9            4.4         2.9          1.4         0.2     setosa #> 10           4.9         3.1          1.5         0.1     setosa #> 11           5.4         3.7          1.5         0.2     setosa #> 12           4.8         3.4          1.6         0.2     setosa #> 13           4.8         3.0          1.4         0.1     setosa #> 14           4.3         3.0          1.1         0.1     setosa #> 15           5.8         4.0          1.2         0.2     setosa #> 16           5.7         4.4          1.5         0.4     setosa #> 17           5.4         3.9          1.3         0.4     setosa #> 18           5.1         3.5          1.4         0.3     setosa #> 19           5.7         3.8          1.7         0.3     setosa #> 20           5.1         3.8          1.5         0.3     setosa #> 21           5.4         3.4          1.7         0.2     setosa #> 22           5.1         3.7          1.5         0.4     setosa #> 23           4.6         3.6          1.0         0.2     setosa #> 24           5.1         3.3          1.7         0.5     setosa #> 25           4.8         3.4          1.9         0.2     setosa #> 26           5.0         3.0          1.6         0.2     setosa #> 27           5.0         3.4          1.6         0.4     setosa #> 28           5.2         3.5          1.5         0.2     setosa #> 29           5.2         3.4          1.4         0.2     setosa #> 30           4.7         3.2          1.6         0.2     setosa #> 31           4.8         3.1          1.6         0.2     setosa #> 32           5.4         3.4          1.5         0.4     setosa #> 33           5.2         4.1          1.5         0.1     setosa #> 34           5.5         4.2          1.4         0.2     setosa #> 35           4.9         3.1          1.5         0.2     setosa #> 36           5.0         3.2          1.2         0.2     setosa #> 37           5.5         3.5          1.3         0.2     setosa #> 38           4.9         3.6          1.4         0.1     setosa #> 39           4.4         3.0          1.3         0.2     setosa #> 40           5.1         3.4          1.5         0.2     setosa #> 41           5.0         3.5          1.3         0.3     setosa #> 42           4.5         2.3          1.3         0.3     setosa #> 43           4.4         3.2          1.3         0.2     setosa #> 44           5.0         3.5          1.6         0.6     setosa #> 45           5.1         3.8          1.9         0.4     setosa #> 46           4.8         3.0          1.4         0.3     setosa #> 47           5.1         3.8          1.6         0.2     setosa #> 48           4.6         3.2          1.4         0.2     setosa #> 49           5.3         3.7          1.5         0.2     setosa #> 50           5.0         3.3          1.4         0.2     setosa #> 51           7.0         3.2          4.7         1.4 versicolor #> 52           6.4         3.2          4.5         1.5 versicolor #> 53           6.9         3.1          4.9         1.5 versicolor #> 54           5.5         2.3          4.0         1.3 versicolor #> 55           6.5         2.8          4.6         1.5 versicolor #> 56           5.7         2.8          4.5         1.3 versicolor #> 57           6.3         3.3          4.7         1.6 versicolor #> 58           4.9         2.4          3.3         1.0 versicolor #> 59           6.6         2.9          4.6         1.3 versicolor #> 60           5.2         2.7          3.9         1.4 versicolor #> 61           5.0         2.0          3.5         1.0 versicolor #> 62           5.9         3.0          4.2         1.5 versicolor #> 63           6.0         2.2          4.0         1.0 versicolor #> 64           6.1         2.9          4.7         1.4 versicolor #> 65           5.6         2.9          3.6         1.3 versicolor #> 66           6.7         3.1          4.4         1.4 versicolor #> 67           5.6         3.0          4.5         1.5 versicolor #> 68           5.8         2.7          4.1         1.0 versicolor #> 69           6.2         2.2          4.5         1.5 versicolor #> 70           5.6         2.5          3.9         1.1 versicolor #> 71           5.9         3.2          4.8         1.8 versicolor #> 72           6.1         2.8          4.0         1.3 versicolor #> 73           6.3         2.5          4.9         1.5 versicolor #> 74           6.1         2.8          4.7         1.2 versicolor #> 75           6.4         2.9          4.3         1.3 versicolor #> 76           6.6         3.0          4.4         1.4 versicolor #> 77           6.8         2.8          4.8         1.4 versicolor #> 78           6.7         3.0          5.0         1.7 versicolor #> 79           6.0         2.9          4.5         1.5 versicolor #> 80           5.7         2.6          3.5         1.0 versicolor #> 81           5.5         2.4          3.8         1.1 versicolor #> 82           5.5         2.4          3.7         1.0 versicolor #> 83           5.8         2.7          3.9         1.2 versicolor #> 84           6.0         2.7          5.1         1.6 versicolor #> 85           5.4         3.0          4.5         1.5 versicolor #> 86           6.0         3.4          4.5         1.6 versicolor #> 87           6.7         3.1          4.7         1.5 versicolor #> 88           6.3         2.3          4.4         1.3 versicolor #> 89           5.6         3.0          4.1         1.3 versicolor #> 90           5.5         2.5          4.0         1.3 versicolor #> 91           5.5         2.6          4.4         1.2 versicolor #> 92           6.1         3.0          4.6         1.4 versicolor #> 93           5.8         2.6          4.0         1.2 versicolor #> 94           5.0         2.3          3.3         1.0 versicolor #> 95           5.6         2.7          4.2         1.3 versicolor #> 96           5.7         3.0          4.2         1.2 versicolor #> 97           5.7         2.9          4.2         1.3 versicolor #> 98           6.2         2.9          4.3         1.3 versicolor #> 99           5.1         2.5          3.0         1.1 versicolor #> 100          5.7         2.8          4.1         1.3 versicolor #> 101          6.3         3.3          6.0         2.5  virginica #> 102          5.8         2.7          5.1         1.9  virginica #> 103          7.1         3.0          5.9         2.1  virginica #> 104          6.3         2.9          5.6         1.8  virginica #> 105          6.5         3.0          5.8         2.2  virginica #> 106          7.6         3.0          6.6         2.1  virginica #> 107          4.9         2.5          4.5         1.7  virginica #> 108          7.3         2.9          6.3         1.8  virginica #> 109          6.7         2.5          5.8         1.8  virginica #> 110          7.2         3.6          6.1         2.5  virginica #> 111          6.5         3.2          5.1         2.0  virginica #> 112          6.4         2.7          5.3         1.9  virginica #> 113          6.8         3.0          5.5         2.1  virginica #> 114          5.7         2.5          5.0         2.0  virginica #> 115          5.8         2.8          5.1         2.4  virginica #> 116          6.4         3.2          5.3         2.3  virginica #> 117          6.5         3.0          5.5         1.8  virginica #> 118          7.7         3.8          6.7         2.2  virginica #> 119          7.7         2.6          6.9         2.3  virginica #> 120          6.0         2.2          5.0         1.5  virginica #> 121          6.9         3.2          5.7         2.3  virginica #> 122          5.6         2.8          4.9         2.0  virginica #> 123          7.7         2.8          6.7         2.0  virginica #> 124          6.3         2.7          4.9         1.8  virginica #> 125          6.7         3.3          5.7         2.1  virginica #> 126          7.2         3.2          6.0         1.8  virginica #> 127          6.2         2.8          4.8         1.8  virginica #> 128          6.1         3.0          4.9         1.8  virginica #> 129          6.4         2.8          5.6         2.1  virginica #> 130          7.2         3.0          5.8         1.6  virginica #> 131          7.4         2.8          6.1         1.9  virginica #> 132          7.9         3.8          6.4         2.0  virginica #> 133          6.4         2.8          5.6         2.2  virginica #> 134          6.3         2.8          5.1         1.5  virginica #> 135          6.1         2.6          5.6         1.4  virginica #> 136          7.7         3.0          6.1         2.3  virginica #> 137          6.3         3.4          5.6         2.4  virginica #> 138          6.4         3.1          5.5         1.8  virginica #> 139          6.0         3.0          4.8         1.8  virginica #> 140          6.9         3.1          5.4         2.1  virginica #> 141          6.7         3.1          5.6         2.4  virginica #> 142          6.9         3.1          5.1         2.3  virginica #> 143          5.8         2.7          5.1         1.9  virginica #> 144          6.8         3.2          5.9         2.3  virginica #> 145          6.7         3.3          5.7         2.5  virginica #> 146          6.7         3.0          5.2         2.3  virginica #> 147          6.3         2.5          5.0         1.9  virginica #> 148          6.5         3.0          5.2         2.0  virginica #> 149          6.2         3.4          5.4         2.3  virginica #> 150          5.9         3.0          5.1         1.8  virginica"},{"path":"https://trelliscope.github.io/trelliscope/reference/set_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a color theme for a Trelliscope display — set_theme","title":"Set a color theme for a Trelliscope display — set_theme","text":"Set color theme Trelliscope display","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/set_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a color theme for a Trelliscope display — set_theme","text":"","code":"set_theme(   trdf,   primary = \"#448aff\",   dark = \"#2e60b1\",   light = \"#4dabf5\",   light_text_on_dark = TRUE,   dark_text = \"#000000\",   light_text = \"#ffffff\",   header_background = \"#fefefe\",   header_text = NULL,   logo = NULL )"},{"path":"https://trelliscope.github.io/trelliscope/reference/set_theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a color theme for a Trelliscope display — set_theme","text":"trdf trelliscope data frame created as_trelliscope_df() primary Primary color use. dark Dark color use. light Light color use. light_text_on_dark light text used backgrounds. using dark color? dark_text Dark text color use. light_text Light text color use. header_background Color use header background. header_text Color use header text. logo URL (relative absolute) logo image include header.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/set_var_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Set labels for variables in a data frame — set_var_labels","title":"Set labels for variables in a data frame — set_var_labels","text":"Set labels variables data frame","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/set_var_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set labels for variables in a data frame — set_var_labels","text":"","code":"set_var_labels(d, ...)"},{"path":"https://trelliscope.github.io/trelliscope/reference/set_var_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set labels for variables in a data frame — set_var_labels","text":"d data frame. ... named set labels, name must correspond one variables dataset.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/set_var_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set labels for variables in a data frame — set_var_labels","text":"","code":"set_var_labels(mtcars, mpg = \"Miles per gallon\", cyl = \"Number of cylinders\") #>                      mpg cyl  disp  hp drat    wt  qsec vs am gear carb #> Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2 #> Valiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1 #> Duster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4 #> Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2 #> Merc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2 #> Merc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4 #> Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4 #> Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3 #> Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3 #> Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3 #> Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4 #> Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4 #> Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4 #> Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1 #> Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2 #> Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1 #> Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1 #> Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2 #> AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2 #> Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4 #> Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2 #> Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1 #> Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2 #> Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2 #> Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4 #> Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6 #> Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8 #> Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2"},{"path":"https://trelliscope.github.io/trelliscope/reference/show_info.html","id":null,"dir":"Reference","previous_headings":"","what":"View trelliscope info of a trelliscope data frame — show_info","title":"View trelliscope info of a trelliscope data frame — show_info","text":"View trelliscope info trelliscope data frame","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/show_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View trelliscope info of a trelliscope data frame — show_info","text":"","code":"show_info(trdf)"},{"path":"https://trelliscope.github.io/trelliscope/reference/show_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View trelliscope info of a trelliscope data frame — show_info","text":"trdf trelliscope data frame created as_trelliscope_df() data frame cast .","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/show_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"View trelliscope info of a trelliscope data frame — show_info","text":"","code":"library(ggplot2) library(dplyr)  panel_dat <- (   ggplot(gap, aes(year, life_exp)) +     geom_point() +     facet_panels(~country + continent)   ) |>   as_panels_df()  trell <- panel_dat |>   as_trelliscope_df(name = \"life expectancy\", path = \"gapminder\") |>   set_default_layout(ncol = 4)  show_info(trell) #> A trelliscope display #> • Name: \"life expectancy\" #> • Description: \"life expectancy\" #> • Tags: none #> • Key columns: \"country\" and \"continent\" #> • Path: \"gapminder\" #> • Number of panels: 142"},{"path":"https://trelliscope.github.io/trelliscope/reference/state_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a ","title":"Specify a ","text":"Specify \"labels\" state","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/state_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a ","text":"","code":"state_labels(varnames = NULL)"},{"path":"https://trelliscope.github.io/trelliscope/reference/state_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a ","text":"varnames vector variable names whose values appear labels. NULL, labels displayed. viewing display.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/state_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a ","title":"Specify a ","text":"Specify \"layout\" state","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/state_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a ","text":"","code":"state_layout(   ncol = 1,   page = 1,   sidebar = FALSE,   viewtype = c(\"grid\", \"table\"),   visible_filters = NULL )"},{"path":"https://trelliscope.github.io/trelliscope/reference/state_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a ","text":"ncol Number columns panels show. page page number show. sidebar sidebar shown? viewtype type view show (\"grid\" \"table\"). visible_filters vector variable names add visible filters sidebar.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/state_sort.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a ","title":"Specify a ","text":"Specify \"sort\" state","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/state_sort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a ","text":"","code":"state_sort(varname, dir = \"asc\")"},{"path":"https://trelliscope.github.io/trelliscope/reference/state_sort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a ","text":"varname name variable sort . dir One \"asc\" \"desc\", describing direction sort.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/trelliscope-shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny bindings for trelliscope — trelliscope-shiny","title":"Shiny bindings for trelliscope — trelliscope-shiny","text":"Output render functions using trelliscope within Shiny applications interactive Rmd documents.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/trelliscope-shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny bindings for trelliscope — trelliscope-shiny","text":"","code":"trelliscopeOutput(outputId, ...)  renderTrelliscope(expr, env = parent.frame(), quoted = FALSE)"},{"path":"https://trelliscope.github.io/trelliscope/reference/trelliscope-shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny bindings for trelliscope — trelliscope-shiny","text":"outputId output variable read ... Argumentsed passed shiny::htmlOutput() useful want save expression variable. expr expression generates trelliscope env environment evaluate expr. quoted expr quoted expression (quote())? ","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/update_display_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Update the list of all displays in an app directory — update_display_list","title":"Update the list of all displays in an app directory — update_display_list","text":"Update list displays app directory","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/update_display_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update the list of all displays in an app directory — update_display_list","text":"","code":"update_display_list(app_path, jsonp = TRUE, id)"},{"path":"https://trelliscope.github.io/trelliscope/reference/update_display_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update the list of all displays in an app directory — update_display_list","text":"app_path path displays stored jsonp true, files read written \"jsonp\" format, otherwise \"json\" format. \"jsonp\" format makes possible browse trelliscope app without need web server. id id display. Can found config.json[p].","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/view_trelliscope.html","id":null,"dir":"Reference","previous_headings":"","what":"View a trelliscope display — view_trelliscope","title":"View a trelliscope display — view_trelliscope","text":"View trelliscope display","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/view_trelliscope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View a trelliscope display — view_trelliscope","text":"","code":"view_trelliscope(trdf = NULL)"},{"path":"https://trelliscope.github.io/trelliscope/reference/view_trelliscope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View a trelliscope display — view_trelliscope","text":"trdf trelliscope data frame created as_trelliscope_df() data frame cast .","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/view_trelliscope.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"View a trelliscope display — view_trelliscope","text":"","code":"library(ggplot2)  panel_dat <- (   ggplot(gap, aes(year, life_exp)) +     geom_point() +     facet_panels(vars(country, continent)) ) |>   as_panels_df()  disp <- panel_dat |>   as_trelliscope_df(name = \"life_expectancy\")  if (FALSE) { view_trelliscope(disp) }"},{"path":"https://trelliscope.github.io/trelliscope/reference/write_trelliscope.html","id":null,"dir":"Reference","previous_headings":"","what":"Write the contents of a display — write_trelliscope","title":"Write the contents of a display — write_trelliscope","text":"Write contents display","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/write_trelliscope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write the contents of a display — write_trelliscope","text":"","code":"write_trelliscope(trdf, force_write = NULL, jsonp = NULL)"},{"path":"https://trelliscope.github.io/trelliscope/reference/write_trelliscope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write the contents of a display — write_trelliscope","text":"trdf trelliscope data frame created as_trelliscope_df() data frame cast . force_write panels forced written even already written? jsonp true, app files written \"jsonp\" format, otherwise \"json\" format. \"jsonp\" format makes possible browse trelliscope app without need web server.","code":""},{"path":"https://trelliscope.github.io/trelliscope/reference/write_trelliscope.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write the contents of a display — write_trelliscope","text":"","code":"library(ggplot2)  panel_dat <- (   ggplot(gap, aes(year, life_exp)) +     geom_point() +     facet_panels(vars(country, continent)) ) |>   as_panels_df()  disp <- panel_dat |>   as_trelliscope_df(name = \"life_expectancy\")  if (FALSE) { disp <- write_trelliscope(disp) view_trelliscope(disp) }"}]
